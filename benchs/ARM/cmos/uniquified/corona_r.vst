
-- =======================================================================
-- Coriolis Structural VHDL Driver
-- Generated on May 27, 2022, 11:12
-- 
-- To be interoperable with Alliance, it uses it's special VHDL subset.
-- ("man vhdl" under Alliance for more informations)
-- =======================================================================

entity corona_r is
  port ( dc_stall_from_pad   : in bit
       ; ic_stall_from_pad   : in bit
       ; reset_n_from_pad    : in bit
       ; dc_data_from_pad    : in bit_vector(31 downto 0)
       ; ic_inst_from_pad    : in bit_vector(31 downto 0)
       ; if_adr_valid_to_pad : out bit
       ; mem_load_to_pad     : out bit
       ; mem_stb_to_pad      : out bit
       ; mem_stw_to_pad      : out bit
       ; if_adr_to_pad       : out bit_vector(31 downto 0)
       ; mem_adr_to_pad      : out bit_vector(31 downto 0)
       ; mem_data_to_pad     : out bit_vector(31 downto 0)
       ; ck                  : linkage bit
       ; vdd                 : linkage bit
       ; vss                 : linkage bit
       );
end corona_r;

architecture structural of corona_r is

  component arm_core
    port ( ck           : in bit
         ; dc_stall     : in bit
         ; ic_stall     : in bit
         ; reset_n      : in bit
         ; dc_data      : in bit_vector(31 downto 0)
         ; ic_inst      : in bit_vector(31 downto 0)
         ; if_adr_valid : out bit
         ; mem_load     : out bit
         ; mem_stb      : out bit
         ; mem_stw      : out bit
         ; if_adr       : out bit_vector(31 downto 0)
         ; mem_adr      : out bit_vector(31 downto 0)
         ; mem_data     : out bit_vector(31 downto 0)
         ; vdd          : in bit
         ; vss          : in bit
         );
  end component;

  signal blockagenet :  bit;


begin

  core : arm_core
  port map ( ck           => ck
           , dc_stall     => dc_stall_from_pad
           , ic_stall     => ic_stall_from_pad
           , reset_n      => reset_n_from_pad
           , dc_data      => dc_data_from_pad(31 downto 0)
           , ic_inst      => ic_inst_from_pad(31 downto 0)
           , if_adr_valid => if_adr_valid_to_pad
           , mem_load     => mem_load_to_pad
           , mem_stb      => mem_stb_to_pad
           , mem_stw      => mem_stw_to_pad
           , if_adr       => if_adr_to_pad(31 downto 0)
           , mem_adr      => mem_adr_to_pad(31 downto 0)
           , mem_data     => mem_data_to_pad(31 downto 0)
           , vdd          => vdd
           , vss          => vss
           );

end structural;

