
-- =======================================================================
-- Coriolis Structural VHDL Driver
-- Generated on Jul 26, 2019, 17:49
-- 
-- To be interoperable with Alliance, it uses it's special VHDL subset.
-- ("man vhdl" under Alliance for more informations)
-- =======================================================================

entity chip is
  port ( m_clock        : in bit
       ; n_inst_ok      : in bit
       ; n_intreq       : in bit
       ; n_mem_ok       : in bit
       ; n_start        : in bit
       ; p_reset        : in bit
       ; n_datai        : in bit_vector(15 downto 0)
       ; n_inst         : in bit_vector(15 downto 0)
       ; n_hlt          : out bit
       ; n_inst_adr     : out bit
       ; n_inst_read    : out bit
       ; n_intack       : out bit
       ; n_memory_adr   : out bit
       ; n_memory_read  : out bit
       ; n_memory_write : out bit
       ; n_wb           : out bit
       ; n_adrs         : out bit_vector(15 downto 0)
       ; n_datao        : out bit_vector(15 downto 0)
       ; n_iadrs        : out bit_vector(15 downto 0)
       ; vdde           : linkage bit
       ; vddi           : linkage bit
       ; vsse           : linkage bit
       ; vssi           : linkage bit
       );
end chip;

architecture structural of chip is

  component corona
    port ( m_clock        : in bit
         ; n_inst_ok      : in bit
         ; n_intreq       : in bit
         ; n_mem_ok       : in bit
         ; n_start        : in bit
         ; p_reset        : in bit
         ; n_datai        : in bit_vector(15 downto 0)
         ; n_inst         : in bit_vector(15 downto 0)
         ; n_hlt          : out bit
         ; n_inst_adr     : out bit
         ; n_inst_read    : out bit
         ; n_intack       : out bit
         ; n_memory_adr   : out bit
         ; n_memory_read  : out bit
         ; n_memory_write : out bit
         ; n_wb           : out bit
         ; n_adrs         : out bit_vector(15 downto 0)
         ; n_datao        : out bit_vector(15 downto 0)
         ; n_iadrs        : out bit_vector(15 downto 0)
         ; vdd            : in bit
         ; vss            : in bit
         );
  end component;

  component po_px
    port ( ck   : in bit
         ; i    : in bit
         ; pad  : out bit
         ; vdde : in bit
         ; vddi : in bit
         ; vsse : in bit
         ; vssi : in bit
         );
  end component;

  component pi_px
    port ( ck   : in bit
         ; pad  : in bit
         ; t    : out bit
         ; vdde : in bit
         ; vddi : in bit
         ; vsse : in bit
         ; vssi : in bit
         );
  end component;

  component pvddick_px
    port ( ck   : in bit
         ; cko  : out wor_bit bus
         ; vdde : in bit
         ; vddi : in bit
         ; vsse : in bit
         ; vssi : in bit
         );
  end component;

  component pvddeck_px
    port ( ck   : in bit
         ; cko  : out wor_bit bus
         ; vdde : in bit
         ; vddi : in bit
         ; vsse : in bit
         ; vssi : in bit
         );
  end component;

  component pvssick_px
    port ( ck   : in bit
         ; cko  : out wor_bit bus
         ; vdde : in bit
         ; vddi : in bit
         ; vsse : in bit
         ; vssi : in bit
         );
  end component;

  component pvsseck_px
    port ( ck   : in bit
         ; cko  : out wor_bit bus
         ; vdde : in bit
         ; vddi : in bit
         ; vsse : in bit
         ; vssi : in bit
         );
  end component;

  component pck_px
    port ( pad  : in bit
         ; ck   : out bit
         ; vdde : in bit
         ; vddi : in bit
         ; vsse : in bit
         ; vssi : in bit
         );
  end component;

  signal cki                 :  bit;
  signal m_clock_core        :  bit;
  signal n_hlt_core          :  bit;
  signal n_inst_adr_core     :  bit;
  signal n_inst_ok_core      :  bit;
  signal n_inst_read_core    :  bit;
  signal n_intack_core       :  bit;
  signal n_intreq_core       :  bit;
  signal n_mem_ok_core       :  bit;
  signal n_memory_adr_core   :  bit;
  signal n_memory_read_core  :  bit;
  signal n_memory_write_core :  bit;
  signal n_start_core        :  bit;
  signal n_wb_core           :  bit;
  signal p_reset_core        :  bit;
  signal n_adrs_core         :  bit_vector(15 downto 0);
  signal n_datai_core        :  bit_vector(15 downto 0);
  signal n_datao_core        :  bit_vector(15 downto 0);
  signal n_iadrs_core        :  bit_vector(15 downto 0);
  signal n_inst_core         :  bit_vector(15 downto 0);


begin

  n_memory_adr : po_px
  port map ( ck   => cki
           , i    => n_memory_adr_core
           , pad  => n_memory_adr
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_11 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(11)
           , pad  => n_iadrs(11)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_10 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(10)
           , pad  => n_iadrs(10)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_memory_write : po_px
  port map ( ck   => cki
           , i    => n_memory_write_core
           , pad  => n_memory_write
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_read : po_px
  port map ( ck   => cki
           , i    => n_inst_read_core
           , pad  => n_inst_read
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_12 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(12)
           , pad  => n_iadrs(12)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_13 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(13)
           , pad  => n_iadrs(13)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_14 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(14)
           , pad  => n_iadrs(14)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_15 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(15)
           , pad  => n_iadrs(15)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  m_clock_0 : pck_px
  port map ( pad  => m_clock
           , ck   => cki
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_mem_ok : pi_px
  port map ( ck   => cki
           , pad  => n_mem_ok
           , t    => n_mem_ok_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_start : pi_px
  port map ( ck   => cki
           , pad  => n_start
           , t    => n_start_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_0 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(0)
           , t    => n_inst_core(0)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_1 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(1)
           , t    => n_inst_core(1)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_2 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(2)
           , t    => n_inst_core(2)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_3 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(3)
           , t    => n_inst_core(3)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_0 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(0)
           , pad  => n_datao(0)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_1 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(1)
           , pad  => n_datao(1)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_2 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(2)
           , pad  => n_datao(2)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  vdd_o_0 : pvddeck_px
  port map ( ck   => cki
           , cko  => m_clock_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_ok : pi_px
  port map ( ck   => cki
           , pad  => n_inst_ok
           , t    => n_inst_ok_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_15 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(15)
           , t    => n_inst_core(15)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_14 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(14)
           , t    => n_inst_core(14)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_13 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(13)
           , t    => n_inst_core(13)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_4 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(4)
           , t    => n_inst_core(4)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_5 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(5)
           , t    => n_inst_core(5)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_6 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(6)
           , t    => n_inst_core(6)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_7 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(7)
           , t    => n_inst_core(7)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_8 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(8)
           , t    => n_inst_core(8)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_9 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(9)
           , t    => n_inst_core(9)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_3 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(3)
           , pad  => n_datao(3)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_4 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(4)
           , pad  => n_datao(4)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_5 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(5)
           , pad  => n_datao(5)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_12 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(12)
           , t    => n_inst_core(12)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_11 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(11)
           , t    => n_inst_core(11)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_10 : pi_px
  port map ( ck   => cki
           , pad  => n_inst(10)
           , t    => n_inst_core(10)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_6 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(6)
           , pad  => n_datao(6)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_7 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(7)
           , pad  => n_datao(7)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_8 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(8)
           , pad  => n_datao(8)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_9 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(9)
           , pad  => n_datao(9)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_memory_read : po_px
  port map ( ck   => cki
           , i    => n_memory_read_core
           , pad  => n_memory_read
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  vss_i_0 : pvssick_px
  port map ( ck   => cki
           , cko  => m_clock_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_0 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(0)
           , pad  => n_adrs(0)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_1 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(1)
           , pad  => n_adrs(1)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_9 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(9)
           , pad  => n_adrs(9)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_8 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(8)
           , pad  => n_adrs(8)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_7 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(7)
           , pad  => n_adrs(7)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_6 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(6)
           , pad  => n_adrs(6)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_5 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(5)
           , pad  => n_adrs(5)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_4 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(4)
           , pad  => n_adrs(4)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_3 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(3)
           , pad  => n_adrs(3)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_2 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(2)
           , pad  => n_adrs(2)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_10 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(10)
           , pad  => n_datao(10)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_11 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(11)
           , pad  => n_datao(11)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_12 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(12)
           , pad  => n_datao(12)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_13 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(13)
           , pad  => n_datao(13)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_14 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(14)
           , pad  => n_datao(14)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datao_15 : po_px
  port map ( ck   => cki
           , i    => n_datao_core(15)
           , pad  => n_datao(15)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  p_reset : pi_px
  port map ( ck   => cki
           , pad  => p_reset
           , t    => p_reset_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_wb : po_px
  port map ( ck   => cki
           , i    => n_wb_core
           , pad  => n_wb
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_6 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(6)
           , pad  => n_iadrs(6)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_7 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(7)
           , pad  => n_iadrs(7)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_8 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(8)
           , pad  => n_iadrs(8)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_9 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(9)
           , pad  => n_iadrs(9)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_4 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(4)
           , pad  => n_iadrs(4)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_3 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(3)
           , pad  => n_iadrs(3)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_2 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(2)
           , pad  => n_iadrs(2)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_1 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(1)
           , pad  => n_iadrs(1)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_0 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(0)
           , pad  => n_iadrs(0)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_iadrs_5 : po_px
  port map ( ck   => cki
           , i    => n_iadrs_core(5)
           , pad  => n_iadrs(5)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_hlt : po_px
  port map ( ck   => cki
           , i    => n_hlt_core
           , pad  => n_hlt
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  vdd_i_0 : pvddick_px
  port map ( ck   => cki
           , cko  => m_clock_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_0 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(0)
           , t    => n_datai_core(0)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_1 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(1)
           , t    => n_datai_core(1)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_2 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(2)
           , t    => n_datai_core(2)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_3 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(3)
           , t    => n_datai_core(3)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_4 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(4)
           , t    => n_datai_core(4)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_5 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(5)
           , t    => n_datai_core(5)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_6 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(6)
           , t    => n_datai_core(6)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_7 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(7)
           , t    => n_datai_core(7)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_8 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(8)
           , t    => n_datai_core(8)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_9 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(9)
           , t    => n_datai_core(9)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_intack : po_px
  port map ( ck   => cki
           , i    => n_intack_core
           , pad  => n_intack
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_inst_adr : po_px
  port map ( ck   => cki
           , i    => n_inst_adr_core
           , pad  => n_inst_adr
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  corona : corona
  port map ( m_clock        => m_clock_core
           , n_inst_ok      => n_inst_ok_core
           , n_intreq       => n_intreq_core
           , n_mem_ok       => n_mem_ok_core
           , n_start        => n_start_core
           , p_reset        => p_reset_core
           , n_datai        => n_datai_core(15 downto 0)
           , n_inst         => n_inst_core(15 downto 0)
           , n_hlt          => n_hlt_core
           , n_inst_adr     => n_inst_adr_core
           , n_inst_read    => n_inst_read_core
           , n_intack       => n_intack_core
           , n_memory_adr   => n_memory_adr_core
           , n_memory_read  => n_memory_read_core
           , n_memory_write => n_memory_write_core
           , n_wb           => n_wb_core
           , n_adrs         => n_adrs_core(15 downto 0)
           , n_datao        => n_datao_core(15 downto 0)
           , n_iadrs        => n_iadrs_core(15 downto 0)
           , vdd            => vddi
           , vss            => vssi
           );

  vss_o_0 : pvsseck_px
  port map ( ck   => cki
           , cko  => m_clock_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_intreq : pi_px
  port map ( ck   => cki
           , pad  => n_intreq
           , t    => n_intreq_core
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_10 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(10)
           , pad  => n_adrs(10)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_11 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(11)
           , pad  => n_adrs(11)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_12 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(12)
           , pad  => n_adrs(12)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_13 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(13)
           , pad  => n_adrs(13)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_14 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(14)
           , pad  => n_adrs(14)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_adrs_15 : po_px
  port map ( ck   => cki
           , i    => n_adrs_core(15)
           , pad  => n_adrs(15)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_10 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(10)
           , t    => n_datai_core(10)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_11 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(11)
           , t    => n_datai_core(11)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_12 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(12)
           , t    => n_datai_core(12)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_13 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(13)
           , t    => n_datai_core(13)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_14 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(14)
           , t    => n_datai_core(14)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

  n_datai_15 : pi_px
  port map ( ck   => cki
           , pad  => n_datai(15)
           , t    => n_datai_core(15)
           , vdde => vdde
           , vddi => vddi
           , vsse => vsse
           , vssi => vssi
           );

end structural;

