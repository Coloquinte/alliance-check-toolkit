entity cla16 is
   port (
      p_reset : in      bit;
      m_clock : in      bit;
      n_do    : in      bit;
      n_out   : out     bit_vector(15 downto 0);
      n_in2   : in      bit_vector(15 downto 0);
      n_in1   : in      bit_vector(15 downto 0);
      n_cin   : in      bit;
      vdd     : in      bit;
      vss     : in      bit
 );
end cla16;

architecture structural of cla16 is
Component inv_x4
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component nao2o22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa2ao222_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      i4  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component xr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component nxr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component mx2_x2
   port (
      cmd : in      bit;
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o4_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component mx3_x2
   port (
      cmd0 : in      bit;
      cmd1 : in      bit;
      i0   : in      bit;
      i1   : in      bit;
      i2   : in      bit;
      q    : out     bit;
      vdd  : in      bit;
      vss  : in      bit
 );
end component;

Component buf_x4
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal mbk_buf_mbk_buf_rtlcarry_3 : bit_vector( 10 downto 10);
signal mbk_buf_rtlcarry_0         : bit_vector( 14 downto 11);
signal mbk_buf_rtlcarry_3         : bit_vector( 10 downto 1);
signal not_n_in1                  : bit_vector( 2 downto 2);
signal not_n_in2                  : bit_vector( 14 downto 4);
signal not_rtlcarry_0             : bit_vector( 14 downto 14);
signal not_rtlcarry_3             : bit_vector( 14 downto 2);
signal rtlcarry_0                 : bit_vector( 14 downto 1);
signal rtlcarry_3                 : bit_vector( 14 downto 1);
signal xr2_x1_sig                 : bit;
signal xr2_x1_9_sig               : bit;
signal xr2_x1_8_sig               : bit;
signal xr2_x1_7_sig               : bit;
signal xr2_x1_6_sig               : bit;
signal xr2_x1_5_sig               : bit;
signal xr2_x1_4_sig               : bit;
signal xr2_x1_3_sig               : bit;
signal xr2_x1_2_sig               : bit;
signal xr2_x1_15_sig              : bit;
signal xr2_x1_14_sig              : bit;
signal xr2_x1_13_sig              : bit;
signal xr2_x1_12_sig              : bit;
signal xr2_x1_11_sig              : bit;
signal xr2_x1_10_sig              : bit;
signal o4_x2_sig                  : bit;
signal o3_x2_sig                  : bit;
signal o3_x2_2_sig                : bit;
signal o2_x2_sig                  : bit;
signal o2_x2_2_sig                : bit;
signal nxr2_x1_sig                : bit;
signal nxr2_x1_9_sig              : bit;
signal nxr2_x1_8_sig              : bit;
signal nxr2_x1_7_sig              : bit;
signal nxr2_x1_6_sig              : bit;
signal nxr2_x1_5_sig              : bit;
signal nxr2_x1_4_sig              : bit;
signal nxr2_x1_3_sig              : bit;
signal nxr2_x1_2_sig              : bit;
signal nxr2_x1_15_sig             : bit;
signal nxr2_x1_14_sig             : bit;
signal nxr2_x1_13_sig             : bit;
signal nxr2_x1_12_sig             : bit;
signal nxr2_x1_11_sig             : bit;
signal nxr2_x1_10_sig             : bit;
signal not_n_do                   : bit;
signal not_aux25                  : bit;
signal not_aux23                  : bit;
signal not_aux22                  : bit;
signal not_aux2                   : bit;
signal na4_x1_sig                 : bit;
signal na3_x1_sig                 : bit;
signal na3_x1_4_sig               : bit;
signal na3_x1_3_sig               : bit;
signal na3_x1_2_sig               : bit;
signal na2_x1_sig                 : bit;
signal na2_x1_2_sig               : bit;
signal mx2_x2_sig                 : bit;
signal mbk_buf_aux21              : bit;
signal inv_x2_sig                 : bit;
signal inv_x2_4_sig               : bit;
signal inv_x2_3_sig               : bit;
signal inv_x2_2_sig               : bit;
signal aux8                       : bit;
signal aux6                       : bit;
signal aux4                       : bit;
signal aux29                      : bit;
signal aux27                      : bit;
signal aux26                      : bit;
signal aux24                      : bit;
signal aux22                      : bit;
signal aux21                      : bit;
signal aux2                       : bit;
signal aux19                      : bit;
signal aux17                      : bit;
signal aux15                      : bit;
signal aux14                      : bit;
signal aux12                      : bit;
signal aux10                      : bit;
signal aux1                       : bit;
signal a2_x2_sig                  : bit;
signal a2_x2_2_sig                : bit;

begin

not_aux23_ins : a2_x2
   port map (
      i1  => not_rtlcarry_0(14),
      i0  => not_rtlcarry_3(14),
      q   => not_aux23,
      vdd => vdd,
      vss => vss
   );

not_aux25_ins : no2_x1
   port map (
      i0  => not_rtlcarry_0(14),
      i1  => not_rtlcarry_3(14),
      nq  => not_aux25,
      vdd => vdd,
      vss => vss
   );

not_aux22_ins : inv_x2
   port map (
      i   => aux22,
      nq  => not_aux22,
      vdd => vdd,
      vss => vss
   );

not_rtlcarry_3_14_ins : inv_x2
   port map (
      i   => rtlcarry_3(14),
      nq  => not_rtlcarry_3(14),
      vdd => vdd,
      vss => vss
   );

not_rtlcarry_0_14_ins : inv_x4
   port map (
      i   => rtlcarry_0(14),
      nq  => not_rtlcarry_0(14),
      vdd => vdd,
      vss => vss
   );

not_rtlcarry_3_10_ins : inv_x2
   port map (
      i   => mbk_buf_rtlcarry_3(10),
      nq  => not_rtlcarry_3(10),
      vdd => vdd,
      vss => vss
   );

not_rtlcarry_3_4_ins : inv_x4
   port map (
      i   => rtlcarry_3(4),
      nq  => not_rtlcarry_3(4),
      vdd => vdd,
      vss => vss
   );

not_aux2_ins : inv_x2
   port map (
      i   => aux2,
      nq  => not_aux2,
      vdd => vdd,
      vss => vss
   );

not_rtlcarry_3_2_ins : inv_x4
   port map (
      i   => rtlcarry_3(2),
      nq  => not_rtlcarry_3(2),
      vdd => vdd,
      vss => vss
   );

not_n_do_ins : inv_x2
   port map (
      i   => n_do,
      nq  => not_n_do,
      vdd => vdd,
      vss => vss
   );

not_n_in2_14_ins : inv_x2
   port map (
      i   => n_in2(14),
      nq  => not_n_in2(14),
      vdd => vdd,
      vss => vss
   );

not_n_in2_4_ins : inv_x2
   port map (
      i   => n_in2(4),
      nq  => not_n_in2(4),
      vdd => vdd,
      vss => vss
   );

not_n_in1_2_ins : inv_x2
   port map (
      i   => n_in1(2),
      nq  => not_n_in1(2),
      vdd => vdd,
      vss => vss
   );

xr2_x1_ins : xr2_x1
   port map (
      i0  => n_in2(8),
      i1  => n_in1(8),
      q   => xr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

aux29_ins : xr2_x1
   port map (
      i0  => rtlcarry_3(8),
      i1  => xr2_x1_sig,
      q   => aux29,
      vdd => vdd,
      vss => vss
   );

aux27_ins : xr2_x1
   port map (
      i0  => n_in1(0),
      i1  => n_in2(0),
      q   => aux27,
      vdd => vdd,
      vss => vss
   );

aux26_ins : no2_x1
   port map (
      i0  => not_aux25,
      i1  => not_n_do,
      nq  => aux26,
      vdd => vdd,
      vss => vss
   );

aux24_ins : no2_x1
   port map (
      i0  => not_aux23,
      i1  => not_n_do,
      nq  => aux24,
      vdd => vdd,
      vss => vss
   );

aux22_ins : xr2_x1
   port map (
      i0  => n_in1(15),
      i1  => n_in2(15),
      q   => aux22,
      vdd => vdd,
      vss => vss
   );

xr2_x1_2_ins : xr2_x1
   port map (
      i0  => n_in1(13),
      i1  => n_in2(13),
      q   => xr2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

aux21_ins : xr2_x1
   port map (
      i0  => rtlcarry_3(13),
      i1  => xr2_x1_2_sig,
      q   => aux21,
      vdd => vdd,
      vss => vss
   );

xr2_x1_3_ins : xr2_x1
   port map (
      i0  => n_in2(12),
      i1  => n_in1(12),
      q   => xr2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

aux19_ins : xr2_x1
   port map (
      i0  => rtlcarry_3(12),
      i1  => xr2_x1_3_sig,
      q   => aux19,
      vdd => vdd,
      vss => vss
   );

xr2_x1_4_ins : xr2_x1
   port map (
      i0  => n_in1(11),
      i1  => n_in2(11),
      q   => xr2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

aux17_ins : xr2_x1
   port map (
      i0  => rtlcarry_3(11),
      i1  => xr2_x1_4_sig,
      q   => aux17,
      vdd => vdd,
      vss => vss
   );

aux15_ins : xr2_x1
   port map (
      i0  => n_in1(10),
      i1  => n_in2(10),
      q   => aux15,
      vdd => vdd,
      vss => vss
   );

xr2_x1_5_ins : xr2_x1
   port map (
      i0  => n_in2(9),
      i1  => n_in1(9),
      q   => xr2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

aux14_ins : xr2_x1
   port map (
      i0  => rtlcarry_3(9),
      i1  => xr2_x1_5_sig,
      q   => aux14,
      vdd => vdd,
      vss => vss
   );

xr2_x1_6_ins : xr2_x1
   port map (
      i0  => n_in2(7),
      i1  => n_in1(7),
      q   => xr2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

aux12_ins : xr2_x1
   port map (
      i0  => mbk_buf_rtlcarry_3(7),
      i1  => xr2_x1_6_sig,
      q   => aux12,
      vdd => vdd,
      vss => vss
   );

xr2_x1_7_ins : xr2_x1
   port map (
      i0  => n_in1(6),
      i1  => n_in2(6),
      q   => xr2_x1_7_sig,
      vdd => vdd,
      vss => vss
   );

aux10_ins : xr2_x1
   port map (
      i0  => mbk_buf_rtlcarry_3(6),
      i1  => xr2_x1_7_sig,
      q   => aux10,
      vdd => vdd,
      vss => vss
   );

xr2_x1_8_ins : xr2_x1
   port map (
      i0  => n_in2(5),
      i1  => n_in1(5),
      q   => xr2_x1_8_sig,
      vdd => vdd,
      vss => vss
   );

aux8_ins : xr2_x1
   port map (
      i0  => mbk_buf_rtlcarry_3(5),
      i1  => xr2_x1_8_sig,
      q   => aux8,
      vdd => vdd,
      vss => vss
   );

xr2_x1_9_ins : xr2_x1
   port map (
      i0  => n_in1(4),
      i1  => n_in2(4),
      q   => xr2_x1_9_sig,
      vdd => vdd,
      vss => vss
   );

aux6_ins : xr2_x1
   port map (
      i0  => mbk_buf_rtlcarry_3(4),
      i1  => xr2_x1_9_sig,
      q   => aux6,
      vdd => vdd,
      vss => vss
   );

xr2_x1_10_ins : xr2_x1
   port map (
      i0  => n_in1(3),
      i1  => n_in2(3),
      q   => xr2_x1_10_sig,
      vdd => vdd,
      vss => vss
   );

aux4_ins : xr2_x1
   port map (
      i0  => mbk_buf_rtlcarry_3(3),
      i1  => xr2_x1_10_sig,
      q   => aux4,
      vdd => vdd,
      vss => vss
   );

aux2_ins : xr2_x1
   port map (
      i0  => mbk_buf_rtlcarry_3(2),
      i1  => n_in1(2),
      q   => aux2,
      vdd => vdd,
      vss => vss
   );

xr2_x1_11_ins : xr2_x1
   port map (
      i0  => n_in2(1),
      i1  => n_in1(1),
      q   => xr2_x1_11_sig,
      vdd => vdd,
      vss => vss
   );

aux1_ins : xr2_x1
   port map (
      i0  => xr2_x1_11_sig,
      i1  => mbk_buf_rtlcarry_3(1),
      q   => aux1,
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_1_ins : a2_x2
   port map (
      i0  => n_cin,
      i1  => aux27,
      q   => rtlcarry_0(1),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_2_ins : a2_x2
   port map (
      i0  => rtlcarry_0(1),
      i1  => aux1,
      q   => rtlcarry_0(2),
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => n_in2(2),
      i1  => not_aux2,
      i2  => rtlcarry_0(2),
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => rtlcarry_0(2),
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

o3_x2_ins : o3_x2
   port map (
      i0  => n_in2(2),
      i1  => not_aux2,
      i2  => inv_x2_sig,
      q   => o3_x2_sig,
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_3_ins : na2_x1
   port map (
      i0  => o3_x2_sig,
      i1  => na3_x1_sig,
      nq  => rtlcarry_0(3),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_4_ins : a2_x2
   port map (
      i0  => aux4,
      i1  => rtlcarry_0(3),
      q   => rtlcarry_0(4),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_5_ins : a2_x2
   port map (
      i0  => rtlcarry_0(4),
      i1  => aux6,
      q   => rtlcarry_0(5),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_6_ins : a2_x2
   port map (
      i0  => rtlcarry_0(5),
      i1  => aux8,
      q   => rtlcarry_0(6),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_7_ins : a2_x2
   port map (
      i0  => rtlcarry_0(6),
      i1  => aux10,
      q   => rtlcarry_0(7),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_8_ins : a2_x2
   port map (
      i0  => rtlcarry_0(7),
      i1  => aux12,
      q   => rtlcarry_0(8),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_9_ins : a2_x2
   port map (
      i0  => rtlcarry_0(8),
      i1  => aux29,
      q   => rtlcarry_0(9),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_10_ins : a2_x2
   port map (
      i0  => rtlcarry_0(9),
      i1  => aux14,
      q   => rtlcarry_0(10),
      vdd => vdd,
      vss => vss
   );

inv_x2_2_ins : inv_x2
   port map (
      i   => rtlcarry_0(10),
      nq  => inv_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

o3_x2_2_ins : o3_x2
   port map (
      i0  => aux15,
      i1  => not_rtlcarry_3(10),
      i2  => inv_x2_2_sig,
      q   => o3_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_2_ins : na3_x1
   port map (
      i0  => aux15,
      i1  => not_rtlcarry_3(10),
      i2  => rtlcarry_0(10),
      nq  => na3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_11_ins : na2_x1
   port map (
      i0  => na3_x1_2_sig,
      i1  => o3_x2_2_sig,
      nq  => rtlcarry_0(11),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_12_ins : a2_x2
   port map (
      i0  => rtlcarry_0(11),
      i1  => aux17,
      q   => rtlcarry_0(12),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_13_ins : a2_x2
   port map (
      i0  => rtlcarry_0(12),
      i1  => aux19,
      q   => rtlcarry_0(13),
      vdd => vdd,
      vss => vss
   );

rtlcarry_0_14_ins : a2_x2
   port map (
      i1  => rtlcarry_0(13),
      i0  => aux21,
      q   => rtlcarry_0(14),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_1_ins : a2_x2
   port map (
      i0  => n_in1(0),
      i1  => n_in2(0),
      q   => rtlcarry_3(1),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_2_ins : oa2ao222_x2
   port map (
      i0  => n_in2(1),
      i1  => n_in1(1),
      i2  => n_in1(1),
      i3  => n_in2(1),
      i4  => rtlcarry_3(1),
      q   => rtlcarry_3(2),
      vdd => vdd,
      vss => vss
   );

a2_x2_ins : a2_x2
   port map (
      i0  => not_n_in1(2),
      i1  => not_rtlcarry_3(2),
      q   => a2_x2_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_3_ins : inv_x2
   port map (
      i   => n_in2(2),
      nq  => inv_x2_3_sig,
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_3_ins : nao2o22_x1
   port map (
      i0  => inv_x2_3_sig,
      i1  => a2_x2_sig,
      i2  => not_rtlcarry_3(2),
      i3  => not_n_in1(2),
      nq  => rtlcarry_3(3),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_4_ins : oa2ao222_x2
   port map (
      i0  => n_in1(3),
      i1  => n_in2(3),
      i2  => n_in2(3),
      i3  => n_in1(3),
      i4  => rtlcarry_3(3),
      q   => rtlcarry_3(4),
      vdd => vdd,
      vss => vss
   );

a2_x2_2_ins : a2_x2
   port map (
      i0  => not_n_in2(4),
      i1  => not_rtlcarry_3(4),
      q   => a2_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_4_ins : inv_x2
   port map (
      i   => n_in1(4),
      nq  => inv_x2_4_sig,
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_5_ins : nao2o22_x1
   port map (
      i0  => inv_x2_4_sig,
      i1  => a2_x2_2_sig,
      i2  => not_rtlcarry_3(4),
      i3  => not_n_in2(4),
      nq  => rtlcarry_3(5),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_6_ins : oa2ao222_x2
   port map (
      i0  => n_in2(5),
      i1  => n_in1(5),
      i2  => n_in1(5),
      i3  => n_in2(5),
      i4  => rtlcarry_3(5),
      q   => rtlcarry_3(6),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_7_ins : oa2ao222_x2
   port map (
      i0  => n_in1(6),
      i1  => n_in2(6),
      i2  => n_in2(6),
      i3  => n_in1(6),
      i4  => rtlcarry_3(6),
      q   => rtlcarry_3(7),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_8_ins : oa2ao222_x2
   port map (
      i0  => n_in2(7),
      i1  => n_in1(7),
      i2  => n_in1(7),
      i3  => n_in2(7),
      i4  => rtlcarry_3(7),
      q   => rtlcarry_3(8),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_9_ins : oa2ao222_x2
   port map (
      i0  => n_in2(8),
      i1  => n_in1(8),
      i2  => n_in1(8),
      i3  => n_in2(8),
      i4  => rtlcarry_3(8),
      q   => rtlcarry_3(9),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_10_ins : oa2ao222_x2
   port map (
      i0  => n_in2(9),
      i1  => n_in1(9),
      i2  => n_in1(9),
      i3  => n_in2(9),
      i4  => rtlcarry_3(9),
      q   => rtlcarry_3(10),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_11_ins : oa2ao222_x2
   port map (
      i0  => n_in1(10),
      i1  => n_in2(10),
      i2  => n_in2(10),
      i3  => n_in1(10),
      i4  => rtlcarry_3(10),
      q   => rtlcarry_3(11),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_12_ins : oa2ao222_x2
   port map (
      i0  => n_in1(11),
      i1  => n_in2(11),
      i2  => n_in2(11),
      i3  => n_in1(11),
      i4  => rtlcarry_3(11),
      q   => rtlcarry_3(12),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_13_ins : oa2ao222_x2
   port map (
      i0  => n_in2(12),
      i1  => n_in1(12),
      i2  => n_in1(12),
      i3  => n_in2(12),
      i4  => rtlcarry_3(12),
      q   => rtlcarry_3(13),
      vdd => vdd,
      vss => vss
   );

rtlcarry_3_14_ins : oa2ao222_x2
   port map (
      i0  => n_in1(13),
      i1  => n_in2(13),
      i2  => n_in2(13),
      i3  => n_in1(13),
      i4  => rtlcarry_3(13),
      q   => rtlcarry_3(14),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_ins : nxr2_x1
   port map (
      i0  => aux27,
      i1  => n_cin,
      nq  => nxr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

n_out_0_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_sig,
      nq  => n_out(0),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_2_ins : nxr2_x1
   port map (
      i0  => aux1,
      i1  => rtlcarry_0(1),
      nq  => nxr2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

n_out_1_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_2_sig,
      nq  => n_out(1),
      vdd => vdd,
      vss => vss
   );

xr2_x1_12_ins : xr2_x1
   port map (
      i0  => rtlcarry_0(2),
      i1  => n_in2(2),
      q   => xr2_x1_12_sig,
      vdd => vdd,
      vss => vss
   );

nxr2_x1_3_ins : nxr2_x1
   port map (
      i0  => aux2,
      i1  => xr2_x1_12_sig,
      nq  => nxr2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

n_out_2_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_3_sig,
      nq  => n_out(2),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_4_ins : nxr2_x1
   port map (
      i0  => rtlcarry_0(3),
      i1  => aux4,
      nq  => nxr2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

n_out_3_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_4_sig,
      nq  => n_out(3),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_5_ins : nxr2_x1
   port map (
      i0  => aux6,
      i1  => rtlcarry_0(4),
      nq  => nxr2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

n_out_4_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_5_sig,
      nq  => n_out(4),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_6_ins : nxr2_x1
   port map (
      i0  => aux8,
      i1  => rtlcarry_0(5),
      nq  => nxr2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

n_out_5_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_6_sig,
      nq  => n_out(5),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_7_ins : nxr2_x1
   port map (
      i0  => aux10,
      i1  => rtlcarry_0(6),
      nq  => nxr2_x1_7_sig,
      vdd => vdd,
      vss => vss
   );

n_out_6_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_7_sig,
      nq  => n_out(6),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_8_ins : nxr2_x1
   port map (
      i0  => aux12,
      i1  => rtlcarry_0(7),
      nq  => nxr2_x1_8_sig,
      vdd => vdd,
      vss => vss
   );

n_out_7_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_8_sig,
      nq  => n_out(7),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_9_ins : nxr2_x1
   port map (
      i0  => aux29,
      i1  => rtlcarry_0(8),
      nq  => nxr2_x1_9_sig,
      vdd => vdd,
      vss => vss
   );

n_out_8_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_9_sig,
      nq  => n_out(8),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_10_ins : nxr2_x1
   port map (
      i0  => aux14,
      i1  => rtlcarry_0(9),
      nq  => nxr2_x1_10_sig,
      vdd => vdd,
      vss => vss
   );

n_out_9_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_10_sig,
      nq  => n_out(9),
      vdd => vdd,
      vss => vss
   );

xr2_x1_13_ins : xr2_x1
   port map (
      i0  => rtlcarry_0(10),
      i1  => aux15,
      q   => xr2_x1_13_sig,
      vdd => vdd,
      vss => vss
   );

nxr2_x1_11_ins : nxr2_x1
   port map (
      i0  => mbk_buf_mbk_buf_rtlcarry_3(10),
      i1  => xr2_x1_13_sig,
      nq  => nxr2_x1_11_sig,
      vdd => vdd,
      vss => vss
   );

n_out_10_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_11_sig,
      nq  => n_out(10),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_12_ins : nxr2_x1
   port map (
      i0  => aux17,
      i1  => mbk_buf_rtlcarry_0(11),
      nq  => nxr2_x1_12_sig,
      vdd => vdd,
      vss => vss
   );

n_out_11_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_12_sig,
      nq  => n_out(11),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_13_ins : nxr2_x1
   port map (
      i0  => aux19,
      i1  => rtlcarry_0(12),
      nq  => nxr2_x1_13_sig,
      vdd => vdd,
      vss => vss
   );

n_out_12_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_13_sig,
      nq  => n_out(12),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_14_ins : nxr2_x1
   port map (
      i0  => mbk_buf_aux21,
      i1  => rtlcarry_0(13),
      nq  => nxr2_x1_14_sig,
      vdd => vdd,
      vss => vss
   );

n_out_13_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_14_sig,
      nq  => n_out(13),
      vdd => vdd,
      vss => vss
   );

xr2_x1_15_ins : xr2_x1
   port map (
      i0  => n_in1(14),
      i1  => n_in2(14),
      q   => xr2_x1_15_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_14_ins : xr2_x1
   port map (
      i0  => mbk_buf_rtlcarry_0(14),
      i1  => xr2_x1_15_sig,
      q   => xr2_x1_14_sig,
      vdd => vdd,
      vss => vss
   );

nxr2_x1_15_ins : nxr2_x1
   port map (
      i0  => rtlcarry_3(14),
      i1  => xr2_x1_14_sig,
      nq  => nxr2_x1_15_sig,
      vdd => vdd,
      vss => vss
   );

n_out_14_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_15_sig,
      nq  => n_out(14),
      vdd => vdd,
      vss => vss
   );

mx2_x2_ins : mx2_x2
   port map (
      cmd => not_n_in2(14),
      i0  => aux26,
      i1  => aux24,
      q   => mx2_x2_sig,
      vdd => vdd,
      vss => vss
   );

o4_x2_ins : o4_x2
   port map (
      i0  => not_rtlcarry_0(14),
      i1  => not_n_in2(14),
      i2  => not_rtlcarry_3(14),
      i3  => not_n_do,
      q   => o4_x2_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_ins : na4_x1
   port map (
      i0  => not_rtlcarry_0(14),
      i1  => n_do,
      i2  => not_rtlcarry_3(14),
      i3  => not_n_in2(14),
      nq  => na4_x1_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => na4_x1_sig,
      i1  => o4_x2_sig,
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

o2_x2_ins : o2_x2
   port map (
      i0  => not_n_in2(14),
      i1  => not_aux23,
      q   => o2_x2_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_3_ins : na3_x1
   port map (
      i0  => aux26,
      i1  => aux22,
      i2  => o2_x2_sig,
      nq  => na3_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

o2_x2_2_ins : o2_x2
   port map (
      i0  => n_in2(14),
      i1  => not_aux25,
      q   => o2_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_4_ins : na3_x1
   port map (
      i0  => aux24,
      i1  => not_aux22,
      i2  => o2_x2_2_sig,
      nq  => na3_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_2_ins : na2_x1
   port map (
      i0  => na3_x1_4_sig,
      i1  => na3_x1_3_sig,
      nq  => na2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

n_out_15_ins : mx3_x2
   port map (
      cmd0 => n_in1(14),
      cmd1 => aux22,
      i0   => na2_x1_2_sig,
      i1   => na2_x1_sig,
      i2   => mx2_x2_sig,
      q    => n_out(15),
      vdd  => vdd,
      vss  => vss
   );

mbk_buf_rtlcarry_3_10 : buf_x4
   port map (
      i   => rtlcarry_3(10),
      q   => mbk_buf_rtlcarry_3(10),
      vdd => vdd,
      vss => vss
   );

mbk_buf_rtlcarry_3_1 : buf_x2
   port map (
      i   => rtlcarry_3(1),
      q   => mbk_buf_rtlcarry_3(1),
      vdd => vdd,
      vss => vss
   );

dmbk_buf_rtlcarry_3_2 : buf_x2
   port map (
      i   => rtlcarry_3(2),
      q   => mbk_buf_rtlcarry_3(2),
      vdd => vdd,
      vss => vss
   );

mbk_buf_rtlcarry_3_4 : buf_x2
   port map (
      i   => rtlcarry_3(4),
      q   => mbk_buf_rtlcarry_3(4),
      vdd => vdd,
      vss => vss
   );

mbk_buf_rtlcarry_0_14 : buf_x2
   port map (
      i   => rtlcarry_0(14),
      q   => mbk_buf_rtlcarry_0(14),
      vdd => vdd,
      vss => vss
   );

dmbk_buf_rtlcarry_3_3 : buf_x2
   port map (
      i   => rtlcarry_3(3),
      q   => mbk_buf_rtlcarry_3(3),
      vdd => vdd,
      vss => vss
   );

mbk_buf_rtlcarry_3_5 : buf_x2
   port map (
      i   => rtlcarry_3(5),
      q   => mbk_buf_rtlcarry_3(5),
      vdd => vdd,
      vss => vss
   );

mbk_buf_rtlcarry_3_6 : buf_x2
   port map (
      i   => rtlcarry_3(6),
      q   => mbk_buf_rtlcarry_3(6),
      vdd => vdd,
      vss => vss
   );

mbk_buf_rtlcarry_3_7 : buf_x2
   port map (
      i   => rtlcarry_3(7),
      q   => mbk_buf_rtlcarry_3(7),
      vdd => vdd,
      vss => vss
   );

mbk_buf_aux21 : buf_x2
   port map (
      i   => aux21,
      q   => mbk_buf_aux21,
      vdd => vdd,
      vss => vss
   );

mbk_buf_mbk_buf_rtlcarry_3_10 : buf_x2
   port map (
      i   => mbk_buf_rtlcarry_3(10),
      q   => mbk_buf_mbk_buf_rtlcarry_3(10),
      vdd => vdd,
      vss => vss
   );

mbk_buf_rtlcarry_0_11 : buf_x2
   port map (
      i   => rtlcarry_0(11),
      q   => mbk_buf_rtlcarry_0(11),
      vdd => vdd,
      vss => vss
   );


end structural;
