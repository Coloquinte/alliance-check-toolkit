entity inc16 is
   port (
      p_reset : in      bit;
      m_clock : in      bit;
      n_do    : in      bit;
      n_out   : out     bit_vector(15 downto 0);
      n_in    : in      bit_vector(15 downto 0);
      vdd     : in      bit;
      vss     : in      bit
 );
end inc16;

architecture structural of inc16 is
Component na4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component an12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a4_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component noa22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component nxr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component mx2_x2
   port (
      cmd : in      bit;
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component xr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa2ao222_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i3  : in      bit;
      i2  : in      bit;
      i4  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal not_n_in      : bit_vector( 13 downto 2);
signal xr2_x1_sig    : bit;
signal xr2_x1_6_sig  : bit;
signal xr2_x1_5_sig  : bit;
signal xr2_x1_4_sig  : bit;
signal xr2_x1_3_sig  : bit;
signal xr2_x1_2_sig  : bit;
signal on12_x1_sig   : bit;
signal on12_x1_5_sig : bit;
signal on12_x1_4_sig : bit;
signal on12_x1_3_sig : bit;
signal on12_x1_2_sig : bit;
signal o2_x2_sig     : bit;
signal nxr2_x1_sig   : bit;
signal nxr2_x1_8_sig : bit;
signal nxr2_x1_7_sig : bit;
signal nxr2_x1_6_sig : bit;
signal nxr2_x1_5_sig : bit;
signal nxr2_x1_4_sig : bit;
signal nxr2_x1_3_sig : bit;
signal nxr2_x1_2_sig : bit;
signal not_n_do      : bit;
signal not_aux7      : bit;
signal not_aux4      : bit;
signal not_aux24     : bit;
signal not_aux21     : bit;
signal not_aux17     : bit;
signal no4_x1_sig    : bit;
signal no3_x1_sig    : bit;
signal na2_x1_sig    : bit;
signal na2_x1_4_sig  : bit;
signal na2_x1_3_sig  : bit;
signal na2_x1_2_sig  : bit;
signal mbk_buf_aux16 : bit;
signal mbk_buf_aux14 : bit;
signal inv_x2_sig    : bit;
signal inv_x2_3_sig  : bit;
signal inv_x2_2_sig  : bit;
signal aux6          : bit;
signal aux3          : bit;
signal aux26         : bit;
signal aux25         : bit;
signal aux22         : bit;
signal aux20         : bit;
signal aux16         : bit;
signal aux14         : bit;
signal aux0          : bit;
signal a4_x2_sig     : bit;
signal a4_x2_2_sig   : bit;
signal a3_x2_sig     : bit;
signal a2_x2_sig     : bit;
signal a2_x2_2_sig   : bit;

begin

not_aux21_ins : an12_x1
   port map (
      i0  => not_n_in(13),
      i1  => aux20,
      q   => not_aux21,
      vdd => vdd,
      vss => vss
   );

not_aux17_ins : na2_x1
   port map (
      i0  => n_in(5),
      i1  => n_in(11),
      nq  => not_aux17,
      vdd => vdd,
      vss => vss
   );

not_aux7_ins : na2_x1
   port map (
      i0  => n_in(5),
      i1  => n_in(2),
      nq  => not_aux7,
      vdd => vdd,
      vss => vss
   );

not_aux24_ins : na4_x1
   port map (
      i0  => n_in(5),
      i1  => n_in(2),
      i2  => n_in(1),
      i3  => n_in(0),
      nq  => not_aux24,
      vdd => vdd,
      vss => vss
   );

not_aux4_ins : on12_x1
   port map (
      i0  => aux3,
      i1  => not_n_in(5),
      q   => not_aux4,
      vdd => vdd,
      vss => vss
   );

not_n_do_ins : inv_x2
   port map (
      i   => n_do,
      nq  => not_n_do,
      vdd => vdd,
      vss => vss
   );

not_n_in_13_ins : inv_x2
   port map (
      i   => n_in(13),
      nq  => not_n_in(13),
      vdd => vdd,
      vss => vss
   );

not_n_in_11_ins : inv_x2
   port map (
      i   => n_in(11),
      nq  => not_n_in(11),
      vdd => vdd,
      vss => vss
   );

not_n_in_6_ins : inv_x2
   port map (
      i   => n_in(6),
      nq  => not_n_in(6),
      vdd => vdd,
      vss => vss
   );

not_n_in_5_ins : inv_x2
   port map (
      i   => n_in(5),
      nq  => not_n_in(5),
      vdd => vdd,
      vss => vss
   );

not_n_in_4_ins : inv_x2
   port map (
      i   => n_in(4),
      nq  => not_n_in(4),
      vdd => vdd,
      vss => vss
   );

not_n_in_3_ins : inv_x2
   port map (
      i   => n_in(3),
      nq  => not_n_in(3),
      vdd => vdd,
      vss => vss
   );

not_n_in_2_ins : inv_x2
   port map (
      i   => n_in(2),
      nq  => not_n_in(2),
      vdd => vdd,
      vss => vss
   );

aux26_ins : no2_x1
   port map (
      i0  => n_in(14),
      i1  => not_n_do,
      nq  => aux26,
      vdd => vdd,
      vss => vss
   );

aux25_ins : a2_x2
   port map (
      i0  => n_in(14),
      i1  => n_do,
      q   => aux25,
      vdd => vdd,
      vss => vss
   );

aux22_ins : an12_x1
   port map (
      i0  => not_n_in(2),
      i1  => aux0,
      q   => aux22,
      vdd => vdd,
      vss => vss
   );

aux20_ins : a4_x2
   port map (
      i0  => aux16,
      i1  => n_in(5),
      i2  => n_in(11),
      i3  => n_in(12),
      q   => aux20,
      vdd => vdd,
      vss => vss
   );

aux16_ins : a3_x2
   port map (
      i0  => n_in(2),
      i1  => n_in(10),
      i2  => aux14,
      q   => aux16,
      vdd => vdd,
      vss => vss
   );

a4_x2_ins : a4_x2
   port map (
      i0  => n_in(1),
      i1  => n_in(3),
      i2  => n_in(0),
      i3  => n_in(8),
      q   => a4_x2_sig,
      vdd => vdd,
      vss => vss
   );

a3_x2_ins : a3_x2
   port map (
      i0  => n_in(4),
      i1  => n_in(6),
      i2  => n_in(7),
      q   => a3_x2_sig,
      vdd => vdd,
      vss => vss
   );

aux14_ins : a3_x2
   port map (
      i0  => a3_x2_sig,
      i1  => n_in(9),
      i2  => a4_x2_sig,
      q   => aux14,
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => n_in(7),
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

aux6_ins : no3_x1
   port map (
      i0  => not_n_in(6),
      i1  => inv_x2_sig,
      i2  => not_n_in(4),
      nq  => aux6,
      vdd => vdd,
      vss => vss
   );

aux3_ins : a4_x2
   port map (
      i0  => n_in(0),
      i1  => n_in(1),
      i2  => n_in(2),
      i3  => n_in(3),
      q   => aux3,
      vdd => vdd,
      vss => vss
   );

aux0_ins : a2_x2
   port map (
      i0  => n_in(0),
      i1  => n_in(1),
      q   => aux0,
      vdd => vdd,
      vss => vss
   );

n_out_0_ins : no2_x1
   port map (
      i0  => n_in(0),
      i1  => not_n_do,
      nq  => n_out(0),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_ins : nxr2_x1
   port map (
      i0  => n_in(0),
      i1  => n_in(1),
      nq  => nxr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

n_out_1_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_sig,
      nq  => n_out(1),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_2_ins : nxr2_x1
   port map (
      i0  => aux0,
      i1  => n_in(2),
      nq  => nxr2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

n_out_2_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_2_sig,
      nq  => n_out(2),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_3_ins : nxr2_x1
   port map (
      i0  => aux22,
      i1  => n_in(3),
      nq  => nxr2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

n_out_3_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_3_sig,
      nq  => n_out(3),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_4_ins : nxr2_x1
   port map (
      i0  => aux3,
      i1  => n_in(4),
      nq  => nxr2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

n_out_4_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_4_sig,
      nq  => n_out(4),
      vdd => vdd,
      vss => vss
   );

inv_x2_2_ins : inv_x2
   port map (
      i   => aux22,
      nq  => inv_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_ins : no3_x1
   port map (
      i0  => not_n_in(3),
      i1  => inv_x2_2_sig,
      i2  => not_n_in(4),
      nq  => no3_x1_sig,
      vdd => vdd,
      vss => vss
   );

nxr2_x1_5_ins : nxr2_x1
   port map (
      i0  => no3_x1_sig,
      i1  => n_in(5),
      nq  => nxr2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

n_out_5_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_5_sig,
      nq  => n_out(5),
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => n_in(6),
      i1  => not_aux4,
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_ins : xr2_x1
   port map (
      i0  => n_in(6),
      i1  => n_in(4),
      q   => xr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_ins : on12_x1
   port map (
      i0  => xr2_x1_sig,
      i1  => not_aux4,
      q   => on12_x1_sig,
      vdd => vdd,
      vss => vss
   );

n_out_6_ins : noa22_x1
   port map (
      i0  => on12_x1_sig,
      i1  => na2_x1_sig,
      i2  => not_n_do,
      nq  => n_out(6),
      vdd => vdd,
      vss => vss
   );

no4_x1_ins : no4_x1
   port map (
      i0  => not_n_in(6),
      i1  => not_n_in(4),
      i2  => not_n_in(3),
      i3  => not_aux24,
      nq  => no4_x1_sig,
      vdd => vdd,
      vss => vss
   );

nxr2_x1_6_ins : nxr2_x1
   port map (
      i0  => no4_x1_sig,
      i1  => n_in(7),
      nq  => nxr2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

n_out_7_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_6_sig,
      nq  => n_out(7),
      vdd => vdd,
      vss => vss
   );

na2_x1_2_ins : na2_x1
   port map (
      i0  => n_in(8),
      i1  => not_aux4,
      nq  => na2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_2_ins : xr2_x1
   port map (
      i0  => aux6,
      i1  => n_in(8),
      q   => xr2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_2_ins : on12_x1
   port map (
      i0  => xr2_x1_2_sig,
      i1  => not_aux4,
      q   => on12_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

n_out_8_ins : noa22_x1
   port map (
      i0  => on12_x1_2_sig,
      i1  => na2_x1_2_sig,
      i2  => not_n_do,
      nq  => n_out(8),
      vdd => vdd,
      vss => vss
   );

inv_x2_3_ins : inv_x2
   port map (
      i   => not_aux24,
      nq  => inv_x2_3_sig,
      vdd => vdd,
      vss => vss
   );

a4_x2_2_ins : a4_x2
   port map (
      i0  => aux6,
      i1  => n_in(3),
      i2  => n_in(8),
      i3  => inv_x2_3_sig,
      q   => a4_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

nxr2_x1_7_ins : nxr2_x1
   port map (
      i0  => a4_x2_2_sig,
      i1  => n_in(9),
      nq  => nxr2_x1_7_sig,
      vdd => vdd,
      vss => vss
   );

n_out_9_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_7_sig,
      nq  => n_out(9),
      vdd => vdd,
      vss => vss
   );

na2_x1_3_ins : na2_x1
   port map (
      i0  => n_in(10),
      i1  => not_aux7,
      nq  => na2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_3_ins : xr2_x1
   port map (
      i0  => mbk_buf_aux14,
      i1  => n_in(10),
      q   => xr2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_3_ins : on12_x1
   port map (
      i0  => xr2_x1_3_sig,
      i1  => not_aux7,
      q   => on12_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

n_out_10_ins : noa22_x1
   port map (
      i0  => on12_x1_3_sig,
      i1  => na2_x1_3_sig,
      i2  => not_n_do,
      nq  => n_out(10),
      vdd => vdd,
      vss => vss
   );

o2_x2_ins : o2_x2
   port map (
      i0  => n_in(5),
      i1  => not_n_in(11),
      q   => o2_x2_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_4_ins : xr2_x1
   port map (
      i0  => mbk_buf_aux16,
      i1  => n_in(11),
      q   => xr2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_4_ins : on12_x1
   port map (
      i0  => xr2_x1_4_sig,
      i1  => not_n_in(5),
      q   => on12_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

n_out_11_ins : noa22_x1
   port map (
      i0  => on12_x1_4_sig,
      i1  => o2_x2_sig,
      i2  => not_n_do,
      nq  => n_out(11),
      vdd => vdd,
      vss => vss
   );

na2_x1_4_ins : na2_x1
   port map (
      i0  => n_in(12),
      i1  => not_aux17,
      nq  => na2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_5_ins : xr2_x1
   port map (
      i0  => mbk_buf_aux16,
      i1  => n_in(12),
      q   => xr2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_5_ins : on12_x1
   port map (
      i0  => xr2_x1_5_sig,
      i1  => not_aux17,
      q   => on12_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

n_out_12_ins : noa22_x1
   port map (
      i0  => on12_x1_5_sig,
      i1  => na2_x1_4_sig,
      i2  => not_n_do,
      nq  => n_out(12),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_8_ins : nxr2_x1
   port map (
      i0  => aux20,
      i1  => n_in(13),
      nq  => nxr2_x1_8_sig,
      vdd => vdd,
      vss => vss
   );

n_out_13_ins : no2_x1
   port map (
      i0  => not_n_do,
      i1  => nxr2_x1_8_sig,
      nq  => n_out(13),
      vdd => vdd,
      vss => vss
   );

n_out_14_ins : mx2_x2
   port map (
      cmd => not_aux21,
      i0  => aux25,
      i1  => aux26,
      q   => n_out(14),
      vdd => vdd,
      vss => vss
   );

xr2_x1_6_ins : xr2_x1
   port map (
      i0  => aux20,
      i1  => n_in(15),
      q   => xr2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_ins : a2_x2
   port map (
      i0  => xr2_x1_6_sig,
      i1  => n_in(13),
      q   => a2_x2_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_2_ins : a2_x2
   port map (
      i0  => n_in(15),
      i1  => not_n_in(13),
      q   => a2_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

n_out_15_ins : oa2ao222_x2
   port map (
      i0  => aux26,
      i1  => n_in(15),
      i3  => a2_x2_2_sig,
      i2  => a2_x2_sig,
      i4  => aux25,
      q   => n_out(15),
      vdd => vdd,
      vss => vss
   );

mbk_buf_aux16 : buf_x2
   port map (
      i   => aux16,
      q   => mbk_buf_aux16,
      vdd => vdd,
      vss => vss
   );

mbk_buf_aux14 : buf_x2
   port map (
      i   => aux14,
      q   => mbk_buf_aux14,
      vdd => vdd,
      vss => vss
   );


end structural;
