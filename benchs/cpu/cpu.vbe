--
-- Generated by VASY
--
ENTITY cpu IS
PORT(
  p_reset	: IN BIT;
  m_clock	: IN BIT;
  mwrite	: OUT BIT;
  mread	: OUT BIT;
  adder	: OUT BIT_VECTOR(7 DOWNTO 0);
  dbuso	: OUT BIT_VECTOR(7 DOWNTO 0);
  dbusi	: IN BIT_VECTOR(7 DOWNTO 0);
  vdd	: IN BIT;
  vss	: IN BIT
);
END cpu;

ARCHITECTURE VBE OF cpu IS

  SIGNAL rtlsum_3	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlcarry_3	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlsum_2	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlcarry_2	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlsum_1	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlcarry_1	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlsum_0	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL rtlcarry_0	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL pc	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL ins	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL op	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL count	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL a	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL i	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL ifetch	: REG_BIT REGISTER;
  SIGNAL ofetch	: REG_BIT REGISTER;
  SIGNAL exop	: REG_BIT REGISTER;
  SIGNAL exec	: REG_BIT REGISTER;
  SIGNAL op1	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL op2	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL res	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL pco	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL pcinc	: BIT;
  SIGNAL add	: BIT;
  SIGNAL br_taken	: BIT;
  SIGNAL v_proc_exec_set	: BIT;
  SIGNAL v_proc_exec_reset	: BIT;
  SIGNAL v_net_0	: BIT;
  SIGNAL v_proc_exop_set	: BIT;
  SIGNAL v_proc_exop_reset	: BIT;
  SIGNAL v_net_1	: BIT;
  SIGNAL v_proc_ofetch_set	: BIT;
  SIGNAL v_proc_ofetch_reset	: BIT;
  SIGNAL v_net_2	: BIT;
  SIGNAL v_proc_ifetch_set	: BIT;
  SIGNAL v_proc_ifetch_reset	: BIT;
  SIGNAL v_net_3	: BIT;
  SIGNAL v_net_4	: BIT;
  SIGNAL v_net_5	: BIT;
  SIGNAL v_net_6	: BIT;
  SIGNAL v_net_7	: BIT;
  SIGNAL v_net_8	: BIT;
  SIGNAL v_net_9	: BIT;
  SIGNAL v_net_10	: BIT;
  SIGNAL v_net_11	: BIT;
  SIGNAL v_net_12	: BIT;
  SIGNAL v_net_13	: BIT;
  SIGNAL v_net_14	: BIT;
  SIGNAL v_net_15	: BIT;
  SIGNAL v_net_16	: BIT;
  SIGNAL v_net_17	: BIT;
  SIGNAL v_net_18	: BIT;
  SIGNAL v_net_19	: BIT;
  SIGNAL v_net_20	: BIT;
  SIGNAL v_net_21	: BIT;
  SIGNAL v_net_22	: BIT;
  SIGNAL v_net_23	: BIT;
  SIGNAL v_net_24	: BIT;
  SIGNAL v_net_25	: BIT;
  SIGNAL v_net_26	: BIT;
  SIGNAL v_net_27	: BIT;
  SIGNAL v_net_28	: BIT;
  SIGNAL v_net_29	: BIT;
  SIGNAL v_net_30	: BIT;
  SIGNAL v_net_31	: BIT;
  SIGNAL v_net_32	: BIT;
  SIGNAL v_net_33	: BIT;
  SIGNAL v_net_34	: BIT;
  SIGNAL v_net_35	: BIT;
  SIGNAL v_net_36	: BIT;
  SIGNAL v_net_37	: BIT;
  SIGNAL v_net_38	: BIT;
  SIGNAL v_net_39	: BIT;
  SIGNAL v_net_40	: BIT;
  SIGNAL v_net_41	: BIT;
  SIGNAL v_net_42	: BIT;
  SIGNAL v_net_43	: BIT;
  SIGNAL v_net_44	: BIT;
  SIGNAL v_net_45	: BIT;
  SIGNAL v_net_46	: BIT;
  SIGNAL v_net_47	: BIT;
  SIGNAL v_net_48	: BIT;
  SIGNAL v_net_49	: BIT;
  SIGNAL v_net_50	: BIT;
  SIGNAL v_net_51	: BIT;
  SIGNAL v_net_52	: BIT;
  SIGNAL v_net_53	: BIT;
  SIGNAL v_net_54	: BIT;
  SIGNAL v_net_55	: BIT;
  SIGNAL v_net_56	: BIT;
  SIGNAL v_net_57	: BIT;
  SIGNAL v_net_58	: BIT;
  SIGNAL v_net_59	: BIT;
  SIGNAL v_net_60	: BIT;
  SIGNAL v_net_61	: BIT;
  SIGNAL v_net_62	: BIT;
  SIGNAL v_net_63	: BIT;
  SIGNAL v_net_64	: BIT;
  SIGNAL v_net_65	: BIT;
  SIGNAL v_net_66	: BIT;
  SIGNAL v_net_67	: BIT;
  SIGNAL v_net_68	: BIT;
  SIGNAL v_net_69	: BIT;
  SIGNAL v_net_70	: BIT;
  SIGNAL v_net_71	: BIT;
  SIGNAL v_net_72	: BIT;
  SIGNAL v_net_73	: BIT;
  SIGNAL v_net_74	: BIT;
  SIGNAL v_net_75	: BIT;
  SIGNAL v_net_76	: BIT;
  SIGNAL v_net_77	: BIT;
  SIGNAL v_net_78	: BIT;
  SIGNAL v_net_79	: BIT;
  SIGNAL v_net_80	: BIT;
  SIGNAL v_net_81	: BIT;
  SIGNAL v_net_82	: BIT;
  SIGNAL v_net_83	: BIT;
  SIGNAL v_net_84	: BIT;
  SIGNAL v_net_85	: BIT;
  SIGNAL v_net_86	: BIT;
  SIGNAL v_net_87	: BIT;
  SIGNAL v_net_88	: BIT;
  SIGNAL v_net_89	: BIT;
  SIGNAL v_net_90	: BIT;
  SIGNAL v_net_91	: BIT;
  SIGNAL v_net_92	: BIT;
  SIGNAL v_net_93	: BIT;
  SIGNAL v_net_94	: BIT;
  SIGNAL v_net_95	: BIT;
  SIGNAL v_net_96	: BIT;
  SIGNAL v_net_97	: BIT;
  SIGNAL v_net_98	: BIT;
  SIGNAL v_net_99	: BIT;
  SIGNAL v_net_100	: BIT;
  SIGNAL v_net_101	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_102	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_103	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_104	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_105	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_106	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_107	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_108	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_109	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_110	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_111	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_112	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_113	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_114	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_115	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_116	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_117	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_118	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_119	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_120	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_121	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_122	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_123	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_124	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL internal_dbuso	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL internal_adder	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL internal_mread	: BIT;
  SIGNAL internal_mwrite	: BIT;
BEGIN

  rtlcarry_3(0) <= '0';
  rtlsum_3 <= ((op1 XOR op2) XOR rtlcarry_3);
  rtlcarry_3(7 downto 1) <= (((op1(6 downto 0) AND op2(6 downto 0)) OR (op1(6 downto 0) AND rtlcarry_3(6 downto 0)
)) OR (op2(6 downto 0) AND rtlcarry_3(6 downto 0)));
  rtlcarry_2(0) <= '0';
  rtlsum_2 <= ((pc XOR "00000001") XOR rtlcarry_2);
  rtlcarry_2(7 downto 1) <= (((pc(6 downto 0) AND "0000001") OR (pc(6 downto 0) AND rtlcarry_2(6 downto 0))
) OR ("0000001" AND rtlcarry_2(6 downto 0)));
  rtlcarry_1(0) <= '0';
  rtlsum_1 <= ((op XOR i) XOR rtlcarry_1);
  rtlcarry_1(7 downto 1) <= (((op(6 downto 0) AND i(6 downto 0)) OR (op(6 downto 0) AND rtlcarry_1(6 downto 0)
)) OR (i(6 downto 0) AND rtlcarry_1(6 downto 0)));
  rtlcarry_0(0) <= '1';
  rtlsum_0 <= ((count XOR "11111110") XOR rtlcarry_0);
  rtlcarry_0(7 downto 1) <= (((count(6 downto 0) AND "1111110") OR (count(6 downto 0) AND rtlcarry_0(6 downto 0)
)) OR ("1111110" AND rtlcarry_0(6 downto 0)));
  LABEL0 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    exec <= GUARDED '0' WHEN p_reset ELSE
     v_proc_exec_set WHEN (NOT(p_reset) AND v_net_0) ELSE exec;
  END BLOCK LABEL0;
  LABEL1 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    exop <= GUARDED '0' WHEN p_reset ELSE
     v_proc_exop_set WHEN (NOT(p_reset) AND v_net_1) ELSE exop;
  END BLOCK LABEL1;
  LABEL2 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    ofetch <= GUARDED '0' WHEN p_reset ELSE
     v_proc_ofetch_set WHEN (NOT(p_reset) AND v_net_2) ELSE ofetch;
  END BLOCK LABEL2;
  LABEL3 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    ifetch <= GUARDED '0' WHEN p_reset ELSE
     v_proc_ifetch_set WHEN (NOT(p_reset) AND v_net_3) ELSE ifetch;
  END BLOCK LABEL3;
  LABEL4 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    i <= GUARDED "00000000" WHEN p_reset ELSE
     ((v_net_115 OR v_net_116) OR v_net_117) WHEN (NOT(p_reset) AND (v_net_95 OR v_net_85 OR v_net_57 OR v_net_46)) ELSE i;
  END BLOCK LABEL4;
  LABEL5 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    a <= GUARDED "00000000" WHEN p_reset ELSE
     (((((((((v_net_105 OR v_net_106) OR v_net_107) OR v_net_108) OR v_net_109) OR v_net_110) OR v_net_111) OR v_net_112) OR v_net_113) OR v_net_114) WHEN (NOT(p_reset) AND (v_net_80 OR v_net_78 OR v_net_76 OR v_net_69 OR v_net_67 OR v_net_59
 OR v_net_50 OR v_net_42 OR v_net_100 OR v_net_90 OR v_net_74 OR v_net_23 OR v_net_18
 OR v_net_16)) ELSE a;
  END BLOCK LABEL5;
  LABEL6 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    count <= GUARDED "11111111" WHEN p_reset ELSE
     rtlsum_0 WHEN (NOT(p_reset) AND v_net_4) ELSE count;
  END BLOCK LABEL6;
  LABEL7 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    op <= GUARDED dbusi WHEN v_net_12 ELSE op;
  END BLOCK LABEL7;
  LABEL8 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    ins <= GUARDED "00000000" WHEN p_reset ELSE
     dbusi WHEN (NOT(p_reset) AND ifetch) ELSE ins;
  END BLOCK LABEL8;
  LABEL9 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    pc <= GUARDED "00000000" WHEN p_reset ELSE
     (((v_net_101 OR v_net_102) OR v_net_103) OR v_net_104) WHEN (NOT(p_reset) AND (exec OR v_net_65 OR v_net_62 OR v_net_5 OR pcinc)) ELSE pc;
  END BLOCK LABEL9;
  internal_mwrite <= '1' WHEN ((v_net_36 OR (v_net_32 OR v_net_25)) = '1') ELSE
     '0';
  mwrite <= internal_mwrite;
  internal_mread <= '1' WHEN ((v_net_48 OR (v_net_44 OR (v_net_40 OR (v_net_10 OR ifetch)))) = '1') ELSE
     '0';
  mread <= internal_mread;
  internal_adder <= rtlsum_1 WHEN (v_net_41 = '1') ELSE
     op WHEN ((v_net_49 OR (v_net_45 OR (v_net_38 OR v_net_34))) = '1') ELSE
     res WHEN (v_net_30 = '1') ELSE
     pco WHEN ((v_net_11 OR ifetch) = '1') ELSE
     "00000000";
  adder <= internal_adder;
  internal_dbuso <= i WHEN (v_net_33 = '1') ELSE
     a WHEN ((v_net_37 OR v_net_26) = '1') ELSE
     "00000000";
  dbuso <= internal_dbuso;
  v_net_124 <= op WHEN (v_net_21 = '1') ELSE
     "00000000";
  v_net_123 <= i WHEN ((v_net_72 OR v_net_28) = '1') ELSE
     "00000000";
  v_net_122 <= "11111111" WHEN ((v_net_88 OR v_net_83) = '1') ELSE
     "00000000";
  v_net_121 <= "00000001" WHEN ((v_net_98 OR v_net_93) = '1') ELSE
     "00000000";
  v_net_120 <= a WHEN ((v_net_99 OR (v_net_89 OR (v_net_73 OR v_net_22))) = '1') ELSE
     "00000000";
  v_net_119 <= op WHEN (v_net_29 = '1') ELSE
     "00000000";
  v_net_118 <= i WHEN ((v_net_94 OR v_net_84) = '1') ELSE
     "00000000";
  v_net_117 <= dbusi WHEN (v_net_46 = '1') ELSE
     "00000000";
  v_net_116 <= op WHEN (v_net_57 = '1') ELSE
     "00000000";
  v_net_115 <= res WHEN ((v_net_95 OR v_net_85) = '1') ELSE
     "00000000";
  v_net_114 <= (a XOR op) WHEN (v_net_16 = '1') ELSE
     "00000000";
  v_net_113 <= (a AND op) WHEN (v_net_18 = '1') ELSE
     "00000000";
  v_net_112 <= res WHEN ((v_net_100 OR (v_net_90 OR (v_net_74 OR v_net_23))) = '1') ELSE
     "00000000";
  v_net_111 <= dbusi WHEN ((v_net_50 OR v_net_42) = '1') ELSE
     "00000000";
  v_net_110 <= op WHEN (v_net_59 = '1') ELSE
     "00000000";
  v_net_109 <= (a XOR i) WHEN (v_net_67 = '1') ELSE
     "00000000";
  v_net_108 <= (a AND i) WHEN (v_net_69 = '1') ELSE
     "00000000";
  v_net_107 <= (a(7) & a(7 downto 1)) WHEN (v_net_76 = '1') ELSE
     "00000000";
  v_net_106 <= (a(6 downto 0) & '0') WHEN (v_net_78 = '1') ELSE
     "00000000";
  v_net_105 <= ('0' & a(7 downto 1)) WHEN (v_net_80 = '1') ELSE
     "00000000";
  v_net_104 <= rtlsum_2 WHEN (pcinc = '1') ELSE
     "00000000";
  v_net_103 <= "00000000" WHEN (v_net_5 = '1') ELSE
     "00000000";
  v_net_102 <= op WHEN (v_net_62 = '1') ELSE
     "00000000";
  v_net_101 <= pc WHEN ((exec OR v_net_65) = '1') ELSE
     "00000000";
  v_net_100 <= (exec AND v_net_96);
  v_net_99 <= (exec AND v_net_96);
  v_net_98 <= (exec AND v_net_96);
  v_net_97 <= (exec AND v_net_96);
  v_net_96 <= exec WHEN ((ins = "00000001") = '1') ELSE
     '0';
  v_net_95 <= (exec AND v_net_91);
  v_net_94 <= (exec AND v_net_91);
  v_net_93 <= (exec AND v_net_91);
  v_net_92 <= (exec AND v_net_91);
  v_net_91 <= exec WHEN ((ins = "00000010") = '1') ELSE
     '0';
  v_net_90 <= (exec AND v_net_86);
  v_net_89 <= (exec AND v_net_86);
  v_net_88 <= (exec AND v_net_86);
  v_net_87 <= (exec AND v_net_86);
  v_net_86 <= exec WHEN ((ins = "00000011") = '1') ELSE
     '0';
  v_net_85 <= (exec AND v_net_81);
  v_net_84 <= (exec AND v_net_81);
  v_net_83 <= (exec AND v_net_81);
  v_net_82 <= (exec AND v_net_81);
  v_net_81 <= exec WHEN ((ins = "00000100") = '1') ELSE
     '0';
  v_net_80 <= (exec AND v_net_79);
  v_net_79 <= exec WHEN ((ins = "00000101") = '1') ELSE
     '0';
  v_net_78 <= (exec AND v_net_77);
  v_net_77 <= exec WHEN ((ins = "00000110") = '1') ELSE
     '0';
  v_net_76 <= (exec AND v_net_75);
  v_net_75 <= exec WHEN ((ins = "00000111") = '1') ELSE
     '0';
  v_net_74 <= (exec AND v_net_70);
  v_net_73 <= (exec AND v_net_70);
  v_net_72 <= (exec AND v_net_70);
  v_net_71 <= (exec AND v_net_70);
  v_net_70 <= exec WHEN ((ins = "00001000") = '1') ELSE
     '0';
  v_net_69 <= (exec AND v_net_68);
  v_net_68 <= exec WHEN ((ins = "00001001") = '1') ELSE
     '0';
  v_net_67 <= (exec AND v_net_66);
  v_net_66 <= exec WHEN ((ins = "00001010") = '1') ELSE
     '0';
  v_net_65 <= (exop AND NOT(br_taken));
  v_net_64 <= (exop AND NOT(br_taken));
  v_net_63 <= (exop AND NOT(br_taken));
  v_net_62 <= (exop AND br_taken);
  v_net_61 <= (exop AND br_taken);
  v_net_60 <= (exop AND br_taken);
  v_net_59 <= (exop AND v_net_58);
  v_net_58 <= exop WHEN ((ins = "10000001") = '1') ELSE
     '0';
  v_net_57 <= (exop AND v_net_56);
  v_net_56 <= exop WHEN ((ins = "10000010") = '1') ELSE
     '0';
  v_net_55 <= (exop AND v_net_54);
  v_net_54 <= exop WHEN ((ins = "10000100") = '1') ELSE
     '0';
  v_net_53 <= ((exop AND v_net_51) AND v_net_52);
  v_net_52 <= (exop AND v_net_51) WHEN ((a = "00000000") = '1') ELSE
     '0';
  v_net_51 <= exop WHEN ((ins = "10000101") = '1') ELSE
     '0';
  v_net_50 <= (exop AND v_net_47);
  v_net_49 <= (exop AND v_net_47);
  v_net_48 <= (exop AND v_net_47);
  v_net_47 <= exop WHEN ((ins = "10001000") = '1') ELSE
     '0';
  v_net_46 <= (exop AND v_net_43);
  v_net_45 <= (exop AND v_net_43);
  v_net_44 <= (exop AND v_net_43);
  v_net_43 <= exop WHEN ((ins = "10001001") = '1') ELSE
     '0';
  v_net_42 <= (exop AND v_net_39);
  v_net_41 <= (exop AND v_net_39);
  v_net_40 <= (exop AND v_net_39);
  v_net_39 <= exop WHEN ((ins = "10001010") = '1') ELSE
     '0';
  v_net_38 <= (exop AND v_net_35);
  v_net_37 <= (exop AND v_net_35);
  v_net_36 <= (exop AND v_net_35);
  v_net_35 <= exop WHEN ((ins = "10011000") = '1') ELSE
     '0';
  v_net_34 <= (exop AND v_net_31);
  v_net_33 <= (exop AND v_net_31);
  v_net_32 <= (exop AND v_net_31);
  v_net_31 <= exop WHEN ((ins = "10011001") = '1') ELSE
     '0';
  v_net_30 <= (exop AND v_net_24);
  v_net_29 <= (exop AND v_net_24);
  v_net_28 <= (exop AND v_net_24);
  v_net_27 <= (exop AND v_net_24);
  v_net_26 <= (exop AND v_net_24);
  v_net_25 <= (exop AND v_net_24);
  v_net_24 <= exop WHEN ((ins = "10011010") = '1') ELSE
     '0';
  v_net_23 <= (exop AND v_net_19);
  v_net_22 <= (exop AND v_net_19);
  v_net_21 <= (exop AND v_net_19);
  v_net_20 <= (exop AND v_net_19);
  v_net_19 <= exop WHEN ((ins = "10101000") = '1') ELSE
     '0';
  v_net_18 <= (exop AND v_net_17);
  v_net_17 <= exop WHEN ((ins = "10101001") = '1') ELSE
     '0';
  v_net_16 <= (exop AND v_net_15);
  v_net_15 <= exop WHEN ((ins = "10101010") = '1') ELSE
     '0';
  v_net_14 <= (ofetch AND NOT(v_net_6));
  v_net_13 <= (ofetch AND NOT(v_net_6));
  v_net_12 <= (ofetch AND v_net_6);
  v_net_11 <= (ofetch AND v_net_6);
  v_net_10 <= (ofetch AND v_net_6);
  v_net_9 <= (ofetch AND v_net_6);
  v_net_8 <= (ofetch AND v_net_6);
  v_net_7 <= (ofetch AND v_net_6);
  v_net_6 <= ins(7);
  v_net_5 <= '1' WHEN ((count = "00000001") = '1') ELSE
     '0';
  v_net_4 <= '1' WHEN ((count /= "00000000") = '1') ELSE
     '0';
  v_net_3 <= (v_proc_ifetch_set OR v_proc_ifetch_reset);
  v_proc_ifetch_reset <= ifetch;
  v_proc_ifetch_set <= '1' WHEN ((exec OR (v_net_64 OR (v_net_61 OR v_net_5))) = '1') ELSE
     '0';
  v_net_2 <= (v_proc_ofetch_set OR v_proc_ofetch_reset);
  v_proc_ofetch_reset <= '1' WHEN ((v_net_13 OR v_net_7) = '1') ELSE
     '0';
  v_proc_ofetch_set <= ifetch;
  v_net_1 <= (v_proc_exop_set OR v_proc_exop_reset);
  v_proc_exop_reset <= '1' WHEN ((v_net_63 OR v_net_60) = '1') ELSE
     '0';
  v_proc_exop_set <= v_net_8;
  v_net_0 <= (v_proc_exec_set OR v_proc_exec_reset);
  v_proc_exec_reset <= exec;
  v_proc_exec_set <= v_net_14;
  br_taken <= '1' WHEN ((v_net_55 OR v_net_53) = '1') ELSE
     '0';
  add <= '1' WHEN ((v_net_97 OR (v_net_92 OR (v_net_87 OR (v_net_82 OR (v_net_71 OR (v_net_27 OR v_net_20
)))))) = '1') ELSE
     '0';
  pcinc <= '1' WHEN ((v_net_9 OR ifetch) = '1') ELSE
     '0';
  pco <= pc;
  res <= rtlsum_3;
  op2 <= (((v_net_121 OR v_net_122) OR v_net_123) OR v_net_124) WHEN (((((v_net_98 OR v_net_93) OR (v_net_88 OR v_net_83)) OR (v_net_72 OR v_net_28)
) OR v_net_21) = '1') ELSE
     "00000000";
  op1 <= ((v_net_118 OR v_net_119) OR v_net_120) WHEN ((((v_net_94 OR v_net_84) OR v_net_29) OR (v_net_99 OR (v_net_89 OR (v_net_73 
OR v_net_22)))) = '1') ELSE
     "00000000";
END VBE;
