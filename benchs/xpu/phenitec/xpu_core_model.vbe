--
-- Generated by VASY
--
ENTITY xpu_core_model IS
PORT(
  v_adder_in1	: OUT BIT_VECTOR(7 DOWNTO 0);
  v_adder_in2	: OUT BIT_VECTOR(7 DOWNTO 0);
  v_adder_sum	: IN BIT_VECTOR(7 DOWNTO 0);
  v_adder_exe	: OUT BIT;
  vss	: IN BIT;
  vdd	: IN BIT;
  n_datai	: IN BIT_VECTOR(7 DOWNTO 0);
  n_datao	: OUT BIT_VECTOR(7 DOWNTO 0);
  n_address	: OUT BIT_VECTOR(7 DOWNTO 0);
  n_mread	: OUT BIT;
  n_mwrite	: OUT BIT;
  m_clock	: IN BIT;
  p_reset	: IN BIT
);
END xpu_core_model;

ARCHITECTURE VBE OF xpu_core_model IS

  SIGNAL internal_n_mwrite	: BIT;
  SIGNAL internal_n_mread	: BIT;
  SIGNAL internal_n_address	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL internal_n_datao	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_78	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_77	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_76	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_75	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_74	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_73	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_72	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_71	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_70	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_69	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_68	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_67	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_66	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_65	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_64	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL v_net_63	: BIT;
  SIGNAL v_net_62	: BIT;
  SIGNAL v_net_60	: BIT;
  SIGNAL v_net_59	: BIT;
  SIGNAL v_net_58	: BIT;
  SIGNAL v_net_56	: BIT;
  SIGNAL v_net_55	: BIT;
  SIGNAL v_net_54	: BIT;
  SIGNAL v_net_53	: BIT;
  SIGNAL v_net_52	: BIT;
  SIGNAL v_net_51	: BIT;
  SIGNAL v_net_50	: BIT;
  SIGNAL v_net_48	: BIT;
  SIGNAL v_net_47	: BIT;
  SIGNAL v_net_46	: BIT;
  SIGNAL v_net_45	: BIT;
  SIGNAL v_net_44	: BIT;
  SIGNAL v_net_43	: BIT;
  SIGNAL v_net_41	: BIT;
  SIGNAL v_net_40	: BIT;
  SIGNAL v_net_39	: BIT;
  SIGNAL v_net_37	: BIT;
  SIGNAL v_net_36	: BIT;
  SIGNAL v_net_35	: BIT;
  SIGNAL v_net_33	: BIT;
  SIGNAL v_net_32	: BIT;
  SIGNAL v_net_31	: BIT;
  SIGNAL v_net_30	: BIT;
  SIGNAL v_net_29	: BIT;
  SIGNAL v_net_27	: BIT;
  SIGNAL v_net_26	: BIT;
  SIGNAL v_net_25	: BIT;
  SIGNAL v_net_24	: BIT;
  SIGNAL v_net_23	: BIT;
  SIGNAL v_net_21	: BIT;
  SIGNAL v_net_20	: BIT;
  SIGNAL v_net_19	: BIT;
  SIGNAL v_net_18	: BIT;
  SIGNAL v_net_17	: BIT;
  SIGNAL v_net_16	: BIT;
  SIGNAL v_net_15	: BIT;
  SIGNAL v_net_14	: BIT;
  SIGNAL v_net_13	: BIT;
  SIGNAL v_net_12	: BIT;
  SIGNAL v_net_11	: BIT;
  SIGNAL v_net_10	: BIT;
  SIGNAL v_net_9	: BIT;
  SIGNAL v_net_8	: BIT;
  SIGNAL v_net_7	: BIT;
  SIGNAL v_net_6	: BIT;
  SIGNAL v_net_5	: BIT;
  SIGNAL v_net_4	: BIT;
  SIGNAL v_net_3	: BIT;
  SIGNAL v_adder_m_clock	: BIT;
  SIGNAL v_adder_p_reset	: BIT;
  SIGNAL v_net_2	: BIT;
  SIGNAL v_proc_ift_reset	: BIT;
  SIGNAL v_proc_ift_set	: BIT;
  SIGNAL v_net_1	: BIT;
  SIGNAL v_proc_imm_reset	: BIT;
  SIGNAL v_proc_imm_set	: BIT;
  SIGNAL v_net_0	: BIT;
  SIGNAL v_proc_exe_reset	: BIT;
  SIGNAL v_proc_exe_set	: BIT;
  SIGNAL n_wop	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL n_nextpc	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL n_exe	: REG_BIT REGISTER;
  SIGNAL n_imm	: REG_BIT REGISTER;
  SIGNAL n_ift	: REG_BIT REGISTER;
  SIGNAL n_acc	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL n_im	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL n_op	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL n_pc	: REG_VECTOR(7 DOWNTO 0) REGISTER;
  SIGNAL n_count	: REG_VECTOR(4 DOWNTO 0) REGISTER;
  SIGNAL rtlcarry_0	: BIT_VECTOR(4 DOWNTO 0);
  SIGNAL rtlsum_0	: BIT_VECTOR(4 DOWNTO 0);

BEGIN

  rtlcarry_0(0) <= '1';
  rtlsum_0 <= ((n_count XOR "11110") XOR rtlcarry_0);
  rtlcarry_0(4 downto 1) <= (((n_count(3 downto 0) AND "1110") OR (n_count(3 downto 0) AND rtlcarry_0(3 downto 0)
)) OR ("1110" AND rtlcarry_0(3 downto 0)));
  LABEL0 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_exe <= GUARDED '0' WHEN NOT(p_reset) ELSE
     v_proc_exe_set WHEN (p_reset AND v_net_0) ELSE n_exe;
  END BLOCK LABEL0;
  LABEL1 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_imm <= GUARDED '0' WHEN NOT(p_reset) ELSE
     v_proc_imm_set WHEN (p_reset AND v_net_1) ELSE n_imm;
  END BLOCK LABEL1;
  LABEL2 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_ift <= GUARDED '0' WHEN NOT(p_reset) ELSE
     v_proc_ift_set WHEN (p_reset AND v_net_2) ELSE n_ift;
  END BLOCK LABEL2;
  LABEL3 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_acc <= GUARDED "00000000" WHEN NOT(p_reset) ELSE
     (((v_net_69 OR v_net_70) OR v_net_71) OR v_net_72) WHEN (p_reset AND (v_net_48 OR v_net_41 OR v_net_37 OR v_net_33)) ELSE n_acc;
  END BLOCK LABEL3;
  LABEL4 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_im <= GUARDED (v_net_67 OR v_net_68) WHEN (v_net_8 OR v_net_13 OR v_net_27) ELSE n_im;
  END BLOCK LABEL4;
  LABEL5 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_op <= GUARDED n_datai WHEN n_ift ELSE n_op;
  END BLOCK LABEL5;
  LABEL6 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_pc <= GUARDED ((v_net_64 OR v_net_65) OR v_net_66) WHEN (v_net_3 OR n_ift OR v_net_17 OR n_exe) ELSE n_pc;
  END BLOCK LABEL6;
  LABEL7 : BLOCK  ((m_clock = '1') AND NOT(m_clock'STABLE) )
  BEGIN
    n_count <= GUARDED "11111" WHEN NOT(p_reset) ELSE
     rtlsum_0 WHEN (p_reset AND v_net_4) ELSE n_count;
  END BLOCK LABEL7;
  internal_n_mwrite <= v_net_19;
  n_mwrite <= internal_n_mwrite;
  internal_n_mread <= '1' WHEN ((v_net_31 OR (v_net_25 OR (v_net_11 OR n_ift))) = '1') ELSE
     '0';
  n_mread <= internal_n_mread;
  internal_n_address <= n_im WHEN ((v_net_32 OR (v_net_26 OR v_net_21)) = '1') ELSE
     n_pc WHEN ((v_net_12 OR n_ift) = '1') ELSE
     "00000000";
  n_address <= internal_n_address;
  internal_n_datao <= n_acc;
  n_datao <= internal_n_datao;
  v_net_78 <= "00000001" WHEN ((v_net_15 OR n_ift) = '1') ELSE
     "00000000";
  v_net_77 <= n_im WHEN (v_net_46 = '1') ELSE
     "00000000";
  v_net_76 <= n_pc WHEN ((v_net_16 OR n_ift) = '1') ELSE
     "00000000";
  v_net_75 <= n_acc WHEN (v_net_47 = '1') ELSE
     "00000000";
  v_net_74 <= n_im WHEN ((v_net_60 OR v_net_56) = '1') ELSE
     "00000000";
  v_net_73 <= n_pc WHEN (v_net_63 = '1') ELSE
     "00000000";
  v_net_72 <= n_datai WHEN (v_net_33 = '1') ELSE
     "00000000";
  v_net_71 <= (n_acc XOR n_im) WHEN (v_net_37 = '1') ELSE
     "00000000";
  v_net_70 <= (n_acc AND n_im) WHEN (v_net_41 = '1') ELSE
     "00000000";
  v_net_69 <= v_adder_sum WHEN (v_net_48 = '1') ELSE
     "00000000";
  v_net_68 <= n_im WHEN (v_net_8 = '1') ELSE
     "00000000";
  v_net_67 <= n_datai WHEN ((v_net_27 OR v_net_13) = '1') ELSE
     "00000000";
  v_net_66 <= "00000000" WHEN (v_net_3 = '1') ELSE
     "00000000";
  v_net_65 <= v_adder_sum WHEN ((v_net_17 OR n_ift) = '1') ELSE
     "00000000";
  v_net_64 <= n_nextpc WHEN (n_exe = '1') ELSE
     "00000000";
  v_net_63 <= ((n_exe AND NOT(v_net_55)) AND NOT(v_net_59));
  v_net_62 <= (n_exe AND v_net_59);
  v_net_60 <= (n_exe AND v_net_59);
  v_net_59 <= n_exe WHEN ((n_wop = "00000011") = '1') ELSE
     '0';
  v_net_58 <= (n_exe AND v_net_55);
  v_net_56 <= (n_exe AND v_net_55);
  v_net_55 <= (v_net_51 AND v_net_53);
  v_net_54 <= v_net_53;
  v_net_53 <= n_exe WHEN ((n_acc = "00000000") = '1') ELSE
     '0';
  v_net_52 <= v_net_51;
  v_net_51 <= n_exe WHEN ((n_wop = "00000100") = '1') ELSE
     '0';
  v_net_50 <= (n_exe AND v_net_44);
  v_net_48 <= (n_exe AND v_net_44);
  v_net_47 <= (n_exe AND v_net_44);
  v_net_46 <= (n_exe AND v_net_44);
  v_net_45 <= (n_exe AND v_net_44);
  v_net_44 <= n_exe WHEN ((n_wop = "00000000") = '1') ELSE
     '0';
  v_net_43 <= (n_exe AND v_net_40);
  v_net_41 <= (n_exe AND v_net_40);
  v_net_40 <= n_exe WHEN ((n_wop = "00000101") = '1') ELSE
     '0';
  v_net_39 <= (n_exe AND v_net_36);
  v_net_37 <= (n_exe AND v_net_36);
  v_net_36 <= n_exe WHEN ((n_wop = "00000110") = '1') ELSE
     '0';
  v_net_35 <= (n_exe AND v_net_30);
  v_net_33 <= (n_exe AND v_net_30);
  v_net_32 <= (n_exe AND v_net_30);
  v_net_31 <= (n_exe AND v_net_30);
  v_net_30 <= n_exe WHEN ((n_wop = "00000001") = '1') ELSE
     '0';
  v_net_29 <= (n_exe AND v_net_24);
  v_net_27 <= (n_exe AND v_net_24);
  v_net_26 <= (n_exe AND v_net_24);
  v_net_25 <= (n_exe AND v_net_24);
  v_net_24 <= n_exe WHEN ((n_wop = "00000111") = '1') ELSE
     '0';
  v_net_23 <= (n_exe AND v_net_18);
  v_net_21 <= (n_exe AND v_net_18);
  v_net_20 <= (n_exe AND v_net_18);
  v_net_19 <= (n_exe AND v_net_18);
  v_net_18 <= n_exe WHEN ((n_wop = "00000010") = '1') ELSE
     '0';
  v_net_17 <= (n_imm AND NOT(v_net_5));
  v_net_16 <= (n_imm AND NOT(v_net_5));
  v_net_15 <= (n_imm AND NOT(v_net_5));
  v_net_14 <= (n_imm AND NOT(v_net_5));
  v_net_13 <= (n_imm AND NOT(v_net_5));
  v_net_12 <= (n_imm AND NOT(v_net_5));
  v_net_11 <= (n_imm AND NOT(v_net_5));
  v_net_10 <= (n_imm AND NOT(v_net_5));
  v_net_9 <= (n_imm AND NOT(v_net_5));
  v_net_8 <= (n_imm AND v_net_5);
  v_net_7 <= (n_imm AND v_net_5);
  v_net_6 <= (n_imm AND v_net_5);
  v_net_5 <= n_op(7);
  v_net_4 <= '1' WHEN ((n_count /= "00000") = '1') ELSE
     '0';
  v_net_3 <= '1' WHEN ((n_count = "00010") = '1') ELSE
     '0';
  v_adder_m_clock <= m_clock;
  v_adder_p_reset <= p_reset;
  v_adder_exe <= '1' WHEN ((v_net_45 OR (v_net_14 OR n_ift)) = '1') ELSE
     '0';
  v_adder_in2 <= (v_net_77 OR v_net_78) WHEN ((v_net_46 OR (v_net_15 OR n_ift)) = '1') ELSE
     "00000000";
  v_adder_in1 <= (v_net_75 OR v_net_76) WHEN ((v_net_47 OR (v_net_16 OR n_ift)) = '1') ELSE
     "00000000";
  v_net_2 <= (v_proc_ift_set OR v_proc_ift_reset);
  v_proc_ift_reset <= n_ift;
  v_proc_ift_set <= '1' WHEN ((n_exe OR v_net_3) = '1') ELSE
     '0';
  v_net_1 <= (v_proc_imm_set OR v_proc_imm_reset);
  v_proc_imm_reset <= '1' WHEN ((v_net_9 OR v_net_6) = '1') ELSE
     '0';
  v_proc_imm_set <= n_ift;
  v_net_0 <= (v_proc_exe_set OR v_proc_exe_reset);
  v_proc_exe_reset <= n_exe;
  v_proc_exe_set <= '1' WHEN ((v_net_10 OR v_net_7) = '1') ELSE
     '0';
  n_wop <= (n_op AND "01111111");
  n_nextpc <= (v_net_73 OR v_net_74) WHEN ((v_net_63 OR (v_net_60 OR v_net_56)) = '1') ELSE
     "00000000";
END VBE;
