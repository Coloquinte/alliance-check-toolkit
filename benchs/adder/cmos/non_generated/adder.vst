entity adder is
   port (
      p_reset : in      bit;
      m_clock : in      bit;
      f       : out     bit_vector(3 downto 0);
      a       : in      bit_vector(3 downto 0);
      b       : in      bit_vector(3 downto 0);
      vdd     : in      bit;
      vss     : in      bit
 );
end adder;

architecture structural of adder is
Component nxr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component mx2_x2
   port (
      cmd : in      bit;
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component xr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa2a22_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff3_x4
   port (
      ck   : in      bit;
      cmd0 : in      bit;
      cmd1 : in      bit;
      i0   : in      bit;
      i1   : in      bit;
      i2   : in      bit;
      q    : out     bit;
      vdd  : in      bit;
      vss  : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal not_a           : bit_vector( 1 downto 0);
signal not_b           : bit_vector( 2 downto 0);
signal r1              : bit_vector( 3 downto 0);
signal r2              : bit_vector( 3 downto 0);
signal r3              : bit_vector( 3 downto 0);
signal r4              : bit_vector( 3 downto 0);
signal r5              : bit_vector( 3 downto 0);
signal r6              : bit_vector( 3 downto 0);
signal r7              : bit_vector( 3 downto 0);
signal r8              : bit_vector( 3 downto 0);
signal r9              : bit_vector( 3 downto 0);
signal xr2_x1_sig      : bit;
signal xr2_x1_8_sig    : bit;
signal xr2_x1_7_sig    : bit;
signal xr2_x1_6_sig    : bit;
signal xr2_x1_5_sig    : bit;
signal xr2_x1_4_sig    : bit;
signal xr2_x1_3_sig    : bit;
signal xr2_x1_2_sig    : bit;
signal on12_x1_sig     : bit;
signal oa2a22_x2_sig   : bit;
signal oa2a22_x2_2_sig : bit;
signal not_aux5        : bit;
signal not_aux3        : bit;
signal not_aux1        : bit;
signal not_aux0        : bit;
signal no3_x1_sig      : bit;
signal na3_x1_sig      : bit;
signal na2_x1_sig      : bit;
signal mx2_x2_sig      : bit;
signal inv_x2_sig      : bit;
signal inv_x2_4_sig    : bit;
signal inv_x2_3_sig    : bit;
signal inv_x2_2_sig    : bit;
signal aux6            : bit;
signal aux5            : bit;
signal aux4            : bit;
signal aux0            : bit;
signal a2_x2_sig       : bit;

begin

not_aux5_ins : inv_x2
   port map (
      i   => aux5,
      nq  => not_aux5,
      vdd => vdd,
      vss => vss
   );

xr2_x1_ins : xr2_x1
   port map (
      i0  => a(2),
      i1  => b(2),
      q   => xr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

not_aux3_ins : nxr2_x1
   port map (
      i0  => xr2_x1_sig,
      i1  => b(1),
      nq  => not_aux3,
      vdd => vdd,
      vss => vss
   );

not_aux1_ins : xr2_x1
   port map (
      i0  => b(2),
      i1  => a(2),
      q   => not_aux1,
      vdd => vdd,
      vss => vss
   );

not_aux0_ins : inv_x2
   port map (
      i   => aux0,
      nq  => not_aux0,
      vdd => vdd,
      vss => vss
   );

not_a_1_ins : inv_x2
   port map (
      i   => a(1),
      nq  => not_a(1),
      vdd => vdd,
      vss => vss
   );

not_a_0_ins : inv_x2
   port map (
      i   => a(0),
      nq  => not_a(0),
      vdd => vdd,
      vss => vss
   );

not_b_2_ins : inv_x2
   port map (
      i   => b(2),
      nq  => not_b(2),
      vdd => vdd,
      vss => vss
   );

not_b_1_ins : inv_x2
   port map (
      i   => b(1),
      nq  => not_b(1),
      vdd => vdd,
      vss => vss
   );

not_b_0_ins : inv_x2
   port map (
      i   => b(0),
      nq  => not_b(0),
      vdd => vdd,
      vss => vss
   );

aux6_ins : on12_x1
   port map (
      i0  => not_b(2),
      i1  => a(2),
      q   => aux6,
      vdd => vdd,
      vss => vss
   );

aux5_ins : a2_x2
   port map (
      i0  => b(2),
      i1  => a(2),
      q   => aux5,
      vdd => vdd,
      vss => vss
   );

aux4_ins : xr2_x1
   port map (
      i0  => b(3),
      i1  => a(3),
      q   => aux4,
      vdd => vdd,
      vss => vss
   );

aux0_ins : a2_x2
   port map (
      i0  => b(0),
      i1  => a(0),
      q   => aux0,
      vdd => vdd,
      vss => vss
   );

r9_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r8(0),
      q   => r9(0),
      vdd => vdd,
      vss => vss
   );

r9_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r8(1),
      q   => r9(1),
      vdd => vdd,
      vss => vss
   );

r9_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r8(2),
      q   => r9(2),
      vdd => vdd,
      vss => vss
   );

r9_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r8(3),
      q   => r9(3),
      vdd => vdd,
      vss => vss
   );

r8_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r7(0),
      q   => r8(0),
      vdd => vdd,
      vss => vss
   );

r8_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r7(1),
      q   => r8(1),
      vdd => vdd,
      vss => vss
   );

r8_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r7(2),
      q   => r8(2),
      vdd => vdd,
      vss => vss
   );

r8_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r7(3),
      q   => r8(3),
      vdd => vdd,
      vss => vss
   );

r7_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r6(0),
      q   => r7(0),
      vdd => vdd,
      vss => vss
   );

r7_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r6(1),
      q   => r7(1),
      vdd => vdd,
      vss => vss
   );

r7_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r6(2),
      q   => r7(2),
      vdd => vdd,
      vss => vss
   );

r7_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r6(3),
      q   => r7(3),
      vdd => vdd,
      vss => vss
   );

r6_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r5(0),
      q   => r6(0),
      vdd => vdd,
      vss => vss
   );

r6_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r5(1),
      q   => r6(1),
      vdd => vdd,
      vss => vss
   );

r6_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r5(2),
      q   => r6(2),
      vdd => vdd,
      vss => vss
   );

r6_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r5(3),
      q   => r6(3),
      vdd => vdd,
      vss => vss
   );

r5_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r4(0),
      q   => r5(0),
      vdd => vdd,
      vss => vss
   );

r5_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r4(1),
      q   => r5(1),
      vdd => vdd,
      vss => vss
   );

r5_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r4(2),
      q   => r5(2),
      vdd => vdd,
      vss => vss
   );

r5_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r4(3),
      q   => r5(3),
      vdd => vdd,
      vss => vss
   );

r4_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r3(0),
      q   => r4(0),
      vdd => vdd,
      vss => vss
   );

r4_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r3(1),
      q   => r4(1),
      vdd => vdd,
      vss => vss
   );

r4_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r3(2),
      q   => r4(2),
      vdd => vdd,
      vss => vss
   );

r4_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r3(3),
      q   => r4(3),
      vdd => vdd,
      vss => vss
   );

r3_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r2(0),
      q   => r3(0),
      vdd => vdd,
      vss => vss
   );

r3_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r2(1),
      q   => r3(1),
      vdd => vdd,
      vss => vss
   );

r3_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r2(2),
      q   => r3(2),
      vdd => vdd,
      vss => vss
   );

r3_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r2(3),
      q   => r3(3),
      vdd => vdd,
      vss => vss
   );

r2_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r1(0),
      q   => r2(0),
      vdd => vdd,
      vss => vss
   );

r2_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r1(1),
      q   => r2(1),
      vdd => vdd,
      vss => vss
   );

r2_2_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r1(2),
      q   => r2(2),
      vdd => vdd,
      vss => vss
   );

r2_3_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => r1(3),
      q   => r2(3),
      vdd => vdd,
      vss => vss
   );

xr2_x1_2_ins : xr2_x1
   port map (
      i0  => b(0),
      i1  => a(0),
      q   => xr2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

r1_0_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => xr2_x1_2_sig,
      q   => r1(0),
      vdd => vdd,
      vss => vss
   );

xr2_x1_4_ins : xr2_x1
   port map (
      i0  => a(1),
      i1  => b(1),
      q   => xr2_x1_4_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_3_ins : xr2_x1
   port map (
      i0  => xr2_x1_4_sig,
      i1  => aux0,
      q   => xr2_x1_3_sig,
      vdd => vdd,
      vss => vss
   );

r1_1_ins : sff1_x4
   port map (
      ck  => m_clock,
      i   => xr2_x1_3_sig,
      q   => r1(1),
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => not_aux3,
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_2_ins : inv_x2
   port map (
      i   => not_aux1,
      nq  => inv_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_3_ins : inv_x2
   port map (
      i   => not_aux3,
      nq  => inv_x2_3_sig,
      vdd => vdd,
      vss => vss
   );

mx2_x2_ins : mx2_x2
   port map (
      cmd => not_aux0,
      i0  => inv_x2_3_sig,
      i1  => not_aux1,
      q   => mx2_x2_sig,
      vdd => vdd,
      vss => vss
   );

r1_2_ins : sff3_x4
   port map (
      ck   => m_clock,
      cmd0 => a(1),
      cmd1 => aux0,
      i0   => mx2_x2_sig,
      i1   => inv_x2_2_sig,
      i2   => inv_x2_sig,
      q    => r1(2),
      vdd  => vdd,
      vss  => vss
   );

xr2_x1_5_ins : xr2_x1
   port map (
      i0  => aux4,
      i1  => aux5,
      q   => xr2_x1_5_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_4_ins : inv_x2
   port map (
      i   => aux6,
      nq  => inv_x2_4_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_ins : no3_x1
   port map (
      i0  => not_a(0),
      i1  => inv_x2_4_sig,
      i2  => not_b(1),
      nq  => no3_x1_sig,
      vdd => vdd,
      vss => vss
   );

on12_x1_ins : on12_x1
   port map (
      i0  => not_aux5,
      i1  => no3_x1_sig,
      q   => on12_x1_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_6_ins : xr2_x1
   port map (
      i0  => on12_x1_sig,
      i1  => aux4,
      q   => xr2_x1_6_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => not_b(1),
      i1  => not_a(0),
      i2  => not_aux5,
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

a2_x2_ins : a2_x2
   port map (
      i0  => na3_x1_sig,
      i1  => aux6,
      q   => a2_x2_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_7_ins : xr2_x1
   port map (
      i0  => a2_x2_sig,
      i1  => aux4,
      q   => xr2_x1_7_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => not_b(1),
      i1  => not_b(2),
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

oa2a22_x2_2_ins : oa2a22_x2
   port map (
      i0  => a(2),
      i1  => na2_x1_sig,
      i2  => b(2),
      i3  => b(1),
      q   => oa2a22_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

xr2_x1_8_ins : xr2_x1
   port map (
      i0  => oa2a22_x2_2_sig,
      i1  => aux4,
      q   => xr2_x1_8_sig,
      vdd => vdd,
      vss => vss
   );

oa2a22_x2_ins : oa2a22_x2
   port map (
      i0  => not_b(0),
      i1  => xr2_x1_8_sig,
      i2  => xr2_x1_7_sig,
      i3  => b(0),
      q   => oa2a22_x2_sig,
      vdd => vdd,
      vss => vss
   );

r1_3_ins : sff3_x4
   port map (
      ck   => m_clock,
      cmd0 => not_a(1),
      cmd1 => b(0),
      i0   => oa2a22_x2_sig,
      i1   => xr2_x1_6_sig,
      i2   => xr2_x1_5_sig,
      q    => r1(3),
      vdd  => vdd,
      vss  => vss
   );

f_0_ins : buf_x2
   port map (
      i   => r9(0),
      q   => f(0),
      vdd => vdd,
      vss => vss
   );

f_1_ins : buf_x2
   port map (
      i   => r9(1),
      q   => f(1),
      vdd => vdd,
      vss => vss
   );

f_2_ins : buf_x2
   port map (
      i   => r9(2),
      q   => f(2),
      vdd => vdd,
      vss => vss
   );

f_3_ins : buf_x2
   port map (
      i   => r9(3),
      q   => f(3),
      vdd => vdd,
      vss => vss
   );


end structural;
