
-- =======================================================================
-- Coriolis Structural VHDL Driver
-- Generated on Feb 25, 2020, 15:30
-- 
-- To be interoperable with Alliance, it uses it's special VHDL subset.
-- ("man vhdl" under Alliance for more informations)
-- =======================================================================

entity decoder2_o is
  port ( ck      : in bit
       ; command : in bit_vector(2 downto 0)
       ; vc      : out bit_vector(7 downto 1)
       ; vdd     : in bit
       ; vss     : in bit
       );
end decoder2_o;

architecture structural of decoder2_o is

  component inv_x2
    port ( i   : in bit
         ; nq  : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component a2_x2
    port ( i0  : in bit
         ; i1  : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component on12_x1
    port ( i0  : in bit
         ; i1  : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component oa22_x2
    port ( i0  : in bit
         ; i1  : in bit
         ; i2  : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component ao22_x2
    port ( i0  : in bit
         ; i1  : in bit
         ; i2  : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component an12_x1
    port ( i0  : in bit
         ; i1  : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component sff1_x4
    port ( ck  : in bit
         ; i   : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component buf_x2
    port ( i   : in bit
         ; q   : out bit
         ; vdd : in bit
         ; vss : in bit
         );
  end component;

  component tie_x0
    port ( vdd : in bit
         ; vss : in bit
         );
  end component;

  component rowend_x0
    port ( vdd : in bit
         ; vss : in bit
         );
  end component;

  signal an12_x1_sig :  bit;
  signal ao22_x2_sig :  bit;
  signal aux0        :  bit;
  signal aux1        :  bit;
  signal oa22_x2_sig :  bit;
  signal on12_x1_sig :  bit;
  signal not_command :  bit_vector(2 downto 0);
  signal thermo      :  bit_vector(7 downto 1);


begin

  feed_0 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  vc_4_ins : buf_x2
  port map ( i   => thermo(4)
           , q   => vc(4)
           , vdd => vdd
           , vss => vss
           );

  not_command_2_ins : inv_x2
  port map ( i   => command(2)
           , nq  => not_command(2)
           , vdd => vdd
           , vss => vss
           );

  an12_x1_ins : an12_x1
  port map ( i0  => not_command(0)
           , i1  => aux1
           , q   => an12_x1_sig
           , vdd => vdd
           , vss => vss
           );

  thermo_5_ins : sff1_x4
  port map ( ck  => ck
           , i   => ao22_x2_sig
           , q   => thermo(5)
           , vdd => vdd
           , vss => vss
           );

  feed_9 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_8 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_5 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_4 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_3 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_2 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_1 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  vc_5_ins : buf_x2
  port map ( i   => thermo(5)
           , q   => vc(5)
           , vdd => vdd
           , vss => vss
           );

  feed_6 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_7 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  thermo_6_ins : sff1_x4
  port map ( ck  => ck
           , i   => aux1
           , q   => thermo(6)
           , vdd => vdd
           , vss => vss
           );

  vc_6_ins : buf_x2
  port map ( i   => thermo(6)
           , q   => vc(6)
           , vdd => vdd
           , vss => vss
           );

  feed_12 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_11 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_10 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_19 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_13 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_14 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_15 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_16 : rowend_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_17 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_18 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  thermo_7_ins : sff1_x4
  port map ( ck  => ck
           , i   => an12_x1_sig
           , q   => thermo(7)
           , vdd => vdd
           , vss => vss
           );

  thermo_1_ins : sff1_x4
  port map ( ck  => ck
           , i   => on12_x1_sig
           , q   => thermo(1)
           , vdd => vdd
           , vss => vss
           );

  vc_7_ins : buf_x2
  port map ( i   => thermo(7)
           , q   => vc(7)
           , vdd => vdd
           , vss => vss
           );

  vc_1_ins : buf_x2
  port map ( i   => thermo(1)
           , q   => vc(1)
           , vdd => vdd
           , vss => vss
           );

  feed_29 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_28 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_27 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_26 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  thermo_2_ins : sff1_x4
  port map ( ck  => ck
           , i   => aux0
           , q   => thermo(2)
           , vdd => vdd
           , vss => vss
           );

  aux0_ins : on12_x1
  port map ( i0  => not_command(2)
           , i1  => command(1)
           , q   => aux0
           , vdd => vdd
           , vss => vss
           );

  not_command_0_ins : inv_x2
  port map ( i   => command(0)
           , nq  => not_command(0)
           , vdd => vdd
           , vss => vss
           );

  vc_2_ins : buf_x2
  port map ( i   => thermo(2)
           , q   => vc(2)
           , vdd => vdd
           , vss => vss
           );

  feed_20 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_21 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_22 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_23 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_24 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_25 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  aux1_ins : a2_x2
  port map ( i0  => command(1)
           , i1  => command(2)
           , q   => aux1
           , vdd => vdd
           , vss => vss
           );

  on12_x1_ins : on12_x1
  port map ( i0  => not_command(0)
           , i1  => aux0
           , q   => on12_x1_sig
           , vdd => vdd
           , vss => vss
           );

  oa22_x2_ins : oa22_x2
  port map ( i0  => command(1)
           , i1  => command(0)
           , i2  => command(2)
           , q   => oa22_x2_sig
           , vdd => vdd
           , vss => vss
           );

  thermo_3_ins : sff1_x4
  port map ( ck  => ck
           , i   => oa22_x2_sig
           , q   => thermo(3)
           , vdd => vdd
           , vss => vss
           );

  feed_30 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_31 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_32 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_33 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_34 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_35 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_36 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_37 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_38 : tie_x0
  port map ( vdd => vdd
           , vss => vss
           );

  feed_39 : rowend_x0
  port map ( vdd => vdd
           , vss => vss
           );

  vc_3_ins : buf_x2
  port map ( i   => thermo(3)
           , q   => vc(3)
           , vdd => vdd
           , vss => vss
           );

  thermo_4_ins : sff1_x4
  port map ( ck  => ck
           , i   => command(2)
           , q   => thermo(4)
           , vdd => vdd
           , vss => vss
           );

  ao22_x2_ins : ao22_x2
  port map ( i0  => command(1)
           , i1  => command(0)
           , i2  => command(2)
           , q   => ao22_x2_sig
           , vdd => vdd
           , vss => vss
           );

end structural;

